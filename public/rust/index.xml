<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rusts on </title>
    <link>https://inksnw.asuscomm.com:3001/rust/</link>
    <description>Recent content in Rusts on </description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 29 Nov 2022 11:51:30 +0800</lastBuildDate>
    <atom:link href="https://inksnw.asuscomm.com:3001/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>15.作用域规则</title>
      <link>https://inksnw.asuscomm.com:3001/rust/15.%E4%BD%9C%E7%94%A8%E5%9F%9F%E8%A7%84%E5%88%99/</link>
      <pubDate>Fri, 07 Oct 2022 22:01:48 +0800</pubDate>
      <guid>https://inksnw.asuscomm.com:3001/rust/15.%E4%BD%9C%E7%94%A8%E5%9F%9F%E8%A7%84%E5%88%99/</guid>
      <description>&lt;p&gt;手敲一遍 &lt;a href=&#34;https://rustwiki.org/zh-CN/rust-by-example/index.html&#34;&gt;通过例子学Rust&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>14.泛型</title>
      <link>https://inksnw.asuscomm.com:3001/rust/14.%E6%B3%9B%E5%9E%8B/</link>
      <pubDate>Thu, 06 Oct 2022 17:12:49 +0800</pubDate>
      <guid>https://inksnw.asuscomm.com:3001/rust/14.%E6%B3%9B%E5%9E%8B/</guid>
      <description>&lt;p&gt;手敲一遍 &lt;a href=&#34;https://rustwiki.org/zh-CN/rust-by-example/index.html&#34;&gt;通过例子学Rust&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>13.属性</title>
      <link>https://inksnw.asuscomm.com:3001/rust/13.%E5%B1%9E%E6%80%A7/</link>
      <pubDate>Thu, 06 Oct 2022 17:05:02 +0800</pubDate>
      <guid>https://inksnw.asuscomm.com:3001/rust/13.%E5%B1%9E%E6%80%A7/</guid>
      <description>&lt;p&gt;手敲一遍 &lt;a href=&#34;https://rustwiki.org/zh-CN/rust-by-example/index.html&#34;&gt;通过例子学Rust&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>12.cargo</title>
      <link>https://inksnw.asuscomm.com:3001/rust/12.cargo/</link>
      <pubDate>Thu, 06 Oct 2022 12:46:57 +0800</pubDate>
      <guid>https://inksnw.asuscomm.com:3001/rust/12.cargo/</guid>
      <description>&lt;p&gt;手敲一遍 &lt;a href=&#34;https://rustwiki.org/zh-CN/rust-by-example/index.html&#34;&gt;通过例子学Rust&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>11.crate</title>
      <link>https://inksnw.asuscomm.com:3001/rust/11.crate/</link>
      <pubDate>Sun, 02 Oct 2022 22:07:11 +0800</pubDate>
      <guid>https://inksnw.asuscomm.com:3001/rust/11.crate/</guid>
      <description>&lt;p&gt;手敲一遍 &lt;a href=&#34;https://rustwiki.org/zh-CN/rust-by-example/index.html&#34;&gt;通过例子学Rust&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>10.模块</title>
      <link>https://inksnw.asuscomm.com:3001/rust/10.%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Sun, 02 Oct 2022 20:34:37 +0800</pubDate>
      <guid>https://inksnw.asuscomm.com:3001/rust/10.%E6%A8%A1%E5%9D%97/</guid>
      <description>&lt;p&gt;手敲一遍 &lt;a href=&#34;https://rustwiki.org/zh-CN/rust-by-example/index.html&#34;&gt;通过例子学Rust&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>9.函数</title>
      <link>https://inksnw.asuscomm.com:3001/rust/9.%E5%87%BD%E6%95%B0/</link>
      <pubDate>Sun, 02 Oct 2022 17:19:01 +0800</pubDate>
      <guid>https://inksnw.asuscomm.com:3001/rust/9.%E5%87%BD%E6%95%B0/</guid>
      <description>&lt;p&gt;手敲一遍 &lt;a href=&#34;https://rustwiki.org/zh-CN/rust-by-example/index.html&#34;&gt;通过例子学Rust&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>8.流程控制</title>
      <link>https://inksnw.asuscomm.com:3001/rust/8.%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</link>
      <pubDate>Thu, 29 Sep 2022 01:02:22 +0800</pubDate>
      <guid>https://inksnw.asuscomm.com:3001/rust/8.%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</guid>
      <description>&lt;p&gt;手敲一遍 &lt;a href=&#34;https://rustwiki.org/zh-CN/rust-by-example/index.html&#34;&gt;通过例子学Rust&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>7.表达式</title>
      <link>https://inksnw.asuscomm.com:3001/rust/7.%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
      <pubDate>Thu, 29 Sep 2022 00:52:09 +0800</pubDate>
      <guid>https://inksnw.asuscomm.com:3001/rust/7.%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
      <description>&lt;p&gt;手敲一遍 &lt;a href=&#34;https://rustwiki.org/zh-CN/rust-by-example/index.html&#34;&gt;通过例子学Rust&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>6.类型转换</title>
      <link>https://inksnw.asuscomm.com:3001/rust/6.%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</link>
      <pubDate>Wed, 28 Sep 2022 20:22:07 +0800</pubDate>
      <guid>https://inksnw.asuscomm.com:3001/rust/6.%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</guid>
      <description>&lt;p&gt;手敲一遍 &lt;a href=&#34;https://rustwiki.org/zh-CN/rust-by-example/index.html&#34;&gt;通过例子学Rust&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>5.类型系统</title>
      <link>https://inksnw.asuscomm.com:3001/rust/5.%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Thu, 22 Sep 2022 23:29:19 +0800</pubDate>
      <guid>https://inksnw.asuscomm.com:3001/rust/5.%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;p&gt;手敲一遍 &lt;a href=&#34;https://rustwiki.org/zh-CN/rust-by-example/index.html&#34;&gt;通过例子学Rust&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.变量绑定</title>
      <link>https://inksnw.asuscomm.com:3001/rust/4.%E5%8F%98%E9%87%8F%E7%BB%91%E5%AE%9A/</link>
      <pubDate>Thu, 22 Sep 2022 10:43:25 +0800</pubDate>
      <guid>https://inksnw.asuscomm.com:3001/rust/4.%E5%8F%98%E9%87%8F%E7%BB%91%E5%AE%9A/</guid>
      <description>&lt;p&gt;手敲一遍 &lt;a href=&#34;https://rustwiki.org/zh-CN/rust-by-example/index.html&#34;&gt;通过例子学Rust&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.自定义类型</title>
      <link>https://inksnw.asuscomm.com:3001/rust/3.%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Wed, 21 Sep 2022 23:23:20 +0800</pubDate>
      <guid>https://inksnw.asuscomm.com:3001/rust/3.%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%9E%8B/</guid>
      <description>&lt;p&gt;手敲一遍 &lt;a href=&#34;https://rustwiki.org/zh-CN/rust-by-example/index.html&#34;&gt;通过例子学Rust&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>2.原生类型</title>
      <link>https://inksnw.asuscomm.com:3001/rust/2.%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Wed, 21 Sep 2022 21:27:12 +0800</pubDate>
      <guid>https://inksnw.asuscomm.com:3001/rust/2.%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%9E%8B/</guid>
      <description>&lt;p&gt;手敲一遍 &lt;a href=&#34;https://rustwiki.org/zh-CN/rust-by-example/index.html&#34;&gt;通过例子学Rust&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.Hello World</title>
      <link>https://inksnw.asuscomm.com:3001/rust/1.hello-world/</link>
      <pubDate>Tue, 20 Sep 2022 22:01:13 +0800</pubDate>
      <guid>https://inksnw.asuscomm.com:3001/rust/1.hello-world/</guid>
      <description>&lt;p&gt;手敲一遍 &lt;a href=&#34;https://rustwiki.org/zh-CN/rust-by-example/index.html&#34;&gt;通过例子学Rust&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rust学习:包与泛型</title>
      <link>https://inksnw.asuscomm.com:3001/rust/rust%E5%AD%A6%E4%B9%A0%E5%8C%85%E4%B8%8E%E6%B3%9B%E5%9E%8B/</link>
      <pubDate>Fri, 09 Sep 2022 15:39:58 +0800</pubDate>
      <guid>https://inksnw.asuscomm.com:3001/rust/rust%E5%AD%A6%E4%B9%A0%E5%8C%85%E4%B8%8E%E6%B3%9B%E5%9E%8B/</guid>
      <description>&lt;h2 id=&#34;包crate和模块&#34;&gt;包、Crate和模块&lt;/h2&gt;&#xA;&lt;p&gt;rust的模块系统包括:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;包: cargo的一个功能，它允许你构建、测试、分享crate。一个包可以包含多个二进制crate和一个可选的库crate&lt;/li&gt;&#xA;&lt;li&gt;crate: 一个模块的树形结构，它形成了库或二进制项目&lt;/li&gt;&#xA;&lt;li&gt;模块(mod)和&lt;code&gt;use&lt;/code&gt;: 模块通过use来使用，允许你控制作用域和路径的私有性&lt;/li&gt;&#xA;&lt;li&gt;路径(path): 一个命名例如结构体、函数或模块等项的方式&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;包和crate&#34;&gt;包和crate&lt;/h3&gt;&#xA;&lt;p&gt;crate是一个二进制项或库。 &lt;code&gt;crate root&lt;/code&gt;是一个源文件，crate 是一个二进制项或者库。Rust 编译器以&lt;code&gt;crate root&lt;/code&gt;为起始点，构成你的 crate 的根模块。 crate将一个作用域相关的功能分组到一起，使得这些功能可以方便的在多个项目间共享。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rust学习:所有权与结构体</title>
      <link>https://inksnw.asuscomm.com:3001/rust/rust%E5%AD%A6%E4%B9%A0%E6%89%80%E6%9C%89%E6%9D%83%E4%B8%8E%E7%BB%93%E6%9E%84%E4%BD%93/</link>
      <pubDate>Fri, 09 Sep 2022 00:12:03 +0800</pubDate>
      <guid>https://inksnw.asuscomm.com:3001/rust/rust%E5%AD%A6%E4%B9%A0%E6%89%80%E6%9C%89%E6%9D%83%E4%B8%8E%E7%BB%93%E6%9E%84%E4%BD%93/</guid>
      <description>&lt;h2 id=&#34;所有权&#34;&gt;所有权&lt;/h2&gt;&#xA;&lt;h3 id=&#34;栈与堆&#34;&gt;栈与堆&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;栈和堆都是代码在运行时可供使用的内存，但是它们的结构不同。栈以放入值的顺序存储值并以相反顺序取出值。这也被称作 &lt;strong&gt;后进先出&lt;/strong&gt;（&lt;em&gt;last in, first out&lt;/em&gt;）。增加数据叫做 &lt;strong&gt;进栈&lt;/strong&gt;（&lt;em&gt;pushing onto the stack&lt;/em&gt;），而移出数据叫做 &lt;strong&gt;出栈&lt;/strong&gt;（&lt;em&gt;popping off the stack&lt;/em&gt;）。栈中的所有数据都必须占用已知且固定的大小。在编译时大小未知或大小可能变化的数据，要改为存储在堆上。 堆是缺乏组织的：当向堆放入数据时，你要请求一定大小的空间。内存分配器（memory allocator）在堆的某处找到一块足够大的空位，把它标记为已使用，并返回一个表示该位置地址的 &lt;strong&gt;指针&lt;/strong&gt;（&lt;em&gt;pointer&lt;/em&gt;）。这个过程称作 &lt;strong&gt;在堆上分配内存&lt;/strong&gt;（&lt;em&gt;allocating on the heap&lt;/em&gt;），有时简称为 “分配”（allocating）。（将数据推入栈中并不被认为是分配）。因为指向放入堆中数据的指针是已知的并且大小是固定的，你可以将该指针存储在栈上，不过当需要实际数据时，必须访问指针。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
