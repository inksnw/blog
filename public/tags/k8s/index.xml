<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>k8s on </title>
    <link>http://inksnw.asuscomm.com:3001/tags/k8s/</link>
    <description>Recent content in k8s on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 17 Jul 2023 18:10:12 +0800</lastBuildDate><atom:link href="http://inksnw.asuscomm.com:3001/tags/k8s/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Etcd性能测试</title>
      <link>http://inksnw.asuscomm.com:3001/post/etcd%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Mon, 17 Jul 2023 18:10:12 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/etcd%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</guid>
      <description>基础配置 1 2 3 4 5 6 7 alias etcdctl=&amp;#39;etcdctl --key=/etc/ssl/etcd/ssl/admin-node1-key.pem --cert=/etc/ssl/etcd/ssl/admin-node1.pem --cacert=/etc/ssl/etcd/ssl/ca.pem --endpoints 192.168.50.50:2379&amp;#39; etcdctl -w table member list +------------------+---------+------------+----------------------------+----------------------------+------------+ | ID | STATUS | NAME | PEER ADDRS | CLIENT ADDRS | IS LEARNER | +------------------+---------+------------+----------------------------+----------------------------+------------+ | ae12e8bc550d8bfc | started | etcd-node1 | https://192.168.50.50:2380 | https://192.168.50.50:2379 | false | +------------------+---------+------------+----------------------------+----------------------------+------------+ 压测 1 2 3 4 5 6 7 8 # 不同大小</description>
    </item>
    
    <item>
      <title>在k8s外部验证bearertoken</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E5%9C%A8k8s%E5%A4%96%E9%83%A8%E9%AA%8C%E8%AF%81bearertoken/</link>
      <pubDate>Wed, 12 Jul 2023 23:42:00 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/%E5%9C%A8k8s%E5%A4%96%E9%83%A8%E9%AA%8C%E8%AF%81bearertoken/</guid>
      <description>生成token 创建一个sa账号 1 2 3 4 5 6 7 cat&amp;lt;&amp;lt;EOF | kubectl apply -f - apiVersion: v1 kind: ServiceAccount metadata: name: mysa namespace: default EOF Token controller检测service account的创建，并</description>
    </item>
    
    <item>
      <title>K8s删除crd会发生什么</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E5%88%A0%E9%99%A4crd%E4%BC%9A%E5%8F%91%E7%94%9F%E4%BB%80%E4%B9%88/</link>
      <pubDate>Thu, 29 Jun 2023 13:58:37 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E5%88%A0%E9%99%A4crd%E4%BC%9A%E5%8F%91%E7%94%9F%E4%BB%80%E4%B9%88/</guid>
      <description>源起 源于一次环境问题排查,在创建cr时, 提示 1 (MethodNotAllowed): error when creating &amp;#34;cr1.yaml&amp;#34;: create not allowed while custom resource definition is terminating 先说结论, 这是由于crd处在预删除状态, 因此无法创建cr, 操作删除</description>
    </item>
    
    <item>
      <title>模拟k8s的watch</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E6%A8%A1%E6%8B%9Fk8s%E7%9A%84watch/</link>
      <pubDate>Wed, 21 Jun 2023 22:46:44 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/%E6%A8%A1%E6%8B%9Fk8s%E7%9A%84watch/</guid>
      <description>k8s的watch功能本质就是利用http的chunked功能 源码位于k8s.io/apiserver/pkg/endpoints/hand</description>
    </item>
    
    <item>
      <title>K8s使用外部权限认证</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E4%BD%BF%E7%94%A8%E5%A4%96%E9%83%A8%E6%9D%83%E9%99%90%E8%AE%A4%E8%AF%81/</link>
      <pubDate>Thu, 15 Jun 2023 22:58:57 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E4%BD%BF%E7%94%A8%E5%A4%96%E9%83%A8%E6%9D%83%E9%99%90%E8%AE%A4%E8%AF%81/</guid>
      <description>直接访问 1 https://192.168.50.50:6443/ 访问被禁止 1 2 3 4 5 6 7 8 9 10 { &amp;#34;kind&amp;#34;: &amp;#34;Status&amp;#34;, &amp;#34;apiVersion&amp;#34;: &amp;#34;v1&amp;#34;, &amp;#34;metadata&amp;#34;: {}, &amp;#34;status&amp;#34;: &amp;#34;Failure&amp;#34;, &amp;#34;message&amp;#34;: &amp;#34;forbidden: User \&amp;#34;system:anonymous\&amp;#34; cannot get path \&amp;#34;/\&amp;#34;&amp;#34;, &amp;#34;reason&amp;#34;: &amp;#34;Forbidden&amp;#34;, &amp;#34;details&amp;#34;: {}, &amp;#34;code&amp;#34;: 403 } 配置文件格式 Webhook 模式需要一个 HTTP 配置文件，通过 --authorization-webhook-config-file=SOME_FILENAME 的参数</description>
    </item>
    
    <item>
      <title>K8s一些工具函数</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E4%B8%80%E4%BA%9B%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/</link>
      <pubDate>Thu, 15 Jun 2023 22:32:54 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E4%B8%80%E4%BA%9B%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/</guid>
      <description>通用的server-side apply 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 package main import ( &amp;#34;context&amp;#34; corev1</description>
    </item>
    
    <item>
      <title>K8s的exec原理与实践</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E7%9A%84exec%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Thu, 15 Jun 2023 21:31:40 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E7%9A%84exec%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5/</guid>
      <description>开启containerd远程连接 修改 /etc/containerd/config.toml文件,允许远程访问 1 2 3 4 5 6 [grpc] tcp_address = &amp;#34;0.0.0.0:8989&amp;#34; [plugins] [plugins.&amp;#34;io.containerd.grpc.v1.cri&amp;#34;] disable_tcp_service = false stream_server_address</description>
    </item>
    
    <item>
      <title>K8s网络策略示例</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E7%BD%91%E7%BB%9C%E7%AD%96%E7%95%A5%E7%A4%BA%E4%BE%8B/</link>
      <pubDate>Sat, 27 May 2023 13:01:57 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E7%BD%91%E7%BB%9C%E7%AD%96%E7%95%A5%E7%A4%BA%E4%BE%8B/</guid>
      <description>示例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 apiVersion: networking.k8s.io/v1 kind: NetworkPolicy metadata: name: test-network-policy namespace: default spec: podSelector: matchLabels: role: db policyTypes: - Ingress - Egress ingress: - from: - ipBlock: except: - 172.17.1.0/24 cidr: 172.17.0.0/16 - namespaceSelector: matchLabels: project: myproject</description>
    </item>
    
    <item>
      <title>使用Charles抓取k8s请求</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8charles%E6%8A%93%E5%8F%96k8s%E8%AF%B7%E6%B1%82/</link>
      <pubDate>Tue, 23 May 2023 16:32:50 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8charles%E6%8A%93%E5%8F%96k8s%E8%AF%B7%E6%B1%82/</guid>
      <description>配置代理 安装Charles,查看设置Proxy-&amp;gt;Proxy Settings,Charles默认监听于8888端口 配置客户端证书 从ku</description>
    </item>
    
    <item>
      <title>Clusterpedia使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/clusterpedia%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 28 Mar 2023 14:56:53 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/clusterpedia%E4%BD%BF%E7%94%A8/</guid>
      <description>Clusterpedia在兼容Kubernetes OpenAPI的基础上，可以实现多集群资源同步，并提供更强大的搜索功能，帮助您高效快捷地获</description>
    </item>
    
    <item>
      <title>使用sdk操作calico</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8sdk%E6%93%8D%E4%BD%9Ccalico/</link>
      <pubDate>Wed, 22 Mar 2023 10:59:38 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8sdk%E6%93%8D%E4%BD%9Ccalico/</guid>
      <description>官方提供了calicoctl来操作calico, 但是使用sdk时一直提示资源未找到 研究了一下, 发现sdk使用的api版本与calicoctl</description>
    </item>
    
    <item>
      <title>Docker限制镜像拉取次数</title>
      <link>http://inksnw.asuscomm.com:3001/post/docker%E9%99%90%E5%88%B6%E9%95%9C%E5%83%8F%E6%8B%89%E5%8F%96%E6%AC%A1%E6%95%B0/</link>
      <pubDate>Mon, 27 Feb 2023 15:53:36 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/docker%E9%99%90%E5%88%B6%E9%95%9C%E5%83%8F%E6%8B%89%E5%8F%96%E6%AC%A1%E6%95%B0/</guid>
      <description>查看限制次数 在使用 docker pull 拉取镜像时，遇到如下报错： 1 Error response from daemon: toomanyrequests: You have reached your pull rate limit. You may increase the limit by authenticating and upgrading: https://www.docker.com/increase-rate-limit 2020 年 11 月 20 日，Docker Hub 基于个人 IP 地址对匿</description>
    </item>
    
    <item>
      <title>控制envoy的几种方式</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E6%8E%A7%E5%88%B6envoy%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Fri, 17 Feb 2023 15:40:43 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/%E6%8E%A7%E5%88%B6envoy%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</guid>
      <description>安装 1 brew install envoy 静态文件 下载示例配置文件 envoy-demo.yaml 并启动 1 envoy -c envoy-demo.yaml 修改示例配置中的转发地址为 www.baidu.com 访问本地,可以看到请求被成功转发 1 curl localhost:10000 配置文件解析 listener : Envoy 的监</description>
    </item>
    
    <item>
      <title>使用grpc操作containerd</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8grpc%E6%93%8D%E4%BD%9Ccontainerd/</link>
      <pubDate>Thu, 16 Feb 2023 19:43:26 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8grpc%E6%93%8D%E4%BD%9Ccontainerd/</guid>
      <description>环境配置 下载containerd二进制包 1 2 wget https://github.com/containerd/containerd/releases/download/v1.6.18/containerd-1.6.18-linux-amd64.tar.gz # 解压包中的二进制到 /usr/local/bin/ 生成配置文件 1 2 mkdir -p /etc/containerd containerd config default &amp;gt; /etc/containerd/config.toml 修改 /etc/containerd/c</description>
    </item>
    
    <item>
      <title>添加公网ip到k8sapiserver</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E6%B7%BB%E5%8A%A0%E5%85%AC%E7%BD%91ip%E5%88%B0apiserver/</link>
      <pubDate>Thu, 16 Feb 2023 16:22:41 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/%E6%B7%BB%E5%8A%A0%E5%85%AC%E7%BD%91ip%E5%88%B0apiserver/</guid>
      <description>公网ip访问 通常情况下，我们的 kubernetes 集群是内网环境，如果想通过公网ip访问apiserver怎么办 实际上把公网 ip 签到证书里面就可以，其中有 apiServerCertSANs 这个</description>
    </item>
    
    <item>
      <title>使用k8s进行leader选举</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8k8s%E8%BF%9B%E8%A1%8Cleader%E9%80%89%E4%B8%BE%E5%8E%9F%E7%90%86/</link>
      <pubDate>Thu, 16 Feb 2023 13:59:00 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8k8s%E8%BF%9B%E8%A1%8Cleader%E9%80%89%E4%B8%BE%E5%8E%9F%E7%90%86/</guid>
      <description>示例代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66</description>
    </item>
    
    <item>
      <title>csi挂载nfs</title>
      <link>http://inksnw.asuscomm.com:3001/post/csi%E6%8C%82%E8%BD%BDnfs/</link>
      <pubDate>Tue, 14 Feb 2023 19:11:47 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/csi%E6%8C%82%E8%BD%BDnfs/</guid>
      <description>配置NFS 安装nfs 1 2 3 4 5 6 7 8 9 10 ➜ apt install nfs-kernel-server # 查看导出的nfs ➜ cat /etc/exports # 重新导出 ➜ exportfs -a ➜ systemctl status nfs-server # 挂载配置情况 ➜ showmount -e localhost Export list for localhost: /data/public * 在另一台主</description>
    </item>
    
    <item>
      <title>临时容器调试</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%B8%B4%E6%97%B6%E5%AE%B9%E5%99%A8%E8%B0%83%E8%AF%95/</link>
      <pubDate>Fri, 10 Feb 2023 13:39:02 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%B8%B4%E6%97%B6%E5%AE%B9%E5%99%A8%E8%B0%83%E8%AF%95/</guid>
      <description>修改manifest文件 修改/etc/kubernetes/manifests 下的三个yaml配置文件在- --feature-gates项后</description>
    </item>
    
    <item>
      <title>访问pod的方式</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E8%AE%BF%E9%97%AEpod%E7%9A%84%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Thu, 09 Feb 2023 10:32:57 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/%E8%AE%BF%E9%97%AEpod%E7%9A%84%E6%96%B9%E5%BC%8F/</guid>
      <description>访问方式 直接访问pod ip 在pod中直接访问pod ip, 如 1 cur 10.233.96.61 访问ip+域名 1 curl 10-233-96-61.default.pod.cluster.local 使用完全限定名 创建一个pod,指定hostname和subdo</description>
    </item>
    
    <item>
      <title>K8s聚合api使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E8%81%9A%E5%90%88api%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 08 Feb 2023 14:21:20 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E8%81%9A%E5%90%88api%E4%BD%BF%E7%94%A8/</guid>
      <description>前置条件 需要/etc/kubernetes/manifests/kube-apiserver.yaml开启以下参数 1 2 3 4 - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt - --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key - --requestheader-allowed-names=front-proxy-client - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt 生</description>
    </item>
    
    <item>
      <title>Virtual Kubelet</title>
      <link>http://inksnw.asuscomm.com:3001/post/virtual-kubelet/</link>
      <pubDate>Tue, 29 Nov 2022 11:39:20 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/virtual-kubelet/</guid>
      <description>安装 containerd 1 apt install containerd 安装 crictl 1 2 3 4 VERSION=&amp;#34;v1.24.1&amp;#34; wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz sudo tar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/local/bin rm -f crictl-$VERSION-linux-amd64.tar.gz 设置crictl的配置文件 1 2 3 4 5 cat &amp;gt; /etc/crictl.yaml &amp;lt;&amp;lt;EOF runtime-endpoint: unix:///run/containerd/containerd.sock image-endpoint: unix:///run/containerd/containerd.sock timeout: 10 EOF 拉取镜像测试 1 2 3 4 5 6 ➜ crictl pull</description>
    </item>
    
    <item>
      <title>OCI规范-Image spec</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86-oci%E8%A7%84%E8%8C%83/</link>
      <pubDate>Mon, 28 Nov 2022 17:17:41 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86-oci%E8%A7%84%E8%8C%83/</guid>
      <description>OCI 规范说起 OCI（Open Container Initiative）规范是事实上的容器标准,OCI 规范分为 Image spec 和 Runtime spec 两部分，它们分别覆盖了容器生命周期的不同阶</description>
    </item>
    
    <item>
      <title>使用nsenter调试容器网络</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8nsenter%E8%B0%83%E8%AF%95%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Sun, 27 Nov 2022 15:15:23 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8nsenter%E8%B0%83%E8%AF%95%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C/</guid>
      <description>获取容器 ID 使用 kubectl 获取 pod 中任意 cotnainer 的 id: 1 kubectl -n test describe pod debug-685b48bcf5-ggn5d containerd运行时 1 2 3 Containers: debug: Container ID: containerd://529bbd5c935562a9ba66fc9b9ffa95d486c6324f26d8253d744ffe3dfd728289 dockerd运行时 1 2 3 Containers: debug: Container ID: docker://e64939086488a9302821566b0c1f193b755c805f5ff5370d5ce5e6f154ffc648 获取 PID 拿到 container id</description>
    </item>
    
    <item>
      <title>Docker&#43;flannel跨主机通信</title>
      <link>http://inksnw.asuscomm.com:3001/post/docker&#43;flannel%E8%B7%A8%E4%B8%BB%E6%9C%BA%E9%80%9A%E4%BF%A1/</link>
      <pubDate>Thu, 24 Nov 2022 19:43:57 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/docker&#43;flannel%E8%B7%A8%E4%B8%BB%E6%9C%BA%E9%80%9A%E4%BF%A1/</guid>
      <description>安装ETCD flannel需要把网络信息存储在etcd中,我们先安装etcd 1 apt install etcd 修改etcd配置文件,开启对外访问 1 2 3 4 5 6 7 8 9 10 #</description>
    </item>
    
    <item>
      <title>Rook安装与使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/rook%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 17 Nov 2022 11:05:33 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/rook%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid>
      <description>在k8s上安装rook 安装文档 https://rook.io/docs/rook/v1.10/Getting-Started/quickstart/ 1 2 3 4 git clone --single-branch --branch v1.10.5 https://github.com/rook/rook.git cd rook/deploy/examples kubectl create -f crds.yaml -f common.yaml -f operator.yaml kubectl create -f cluster.yaml 查看创建的Pod 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22</description>
    </item>
    
    <item>
      <title>使用Telepresence流量转发</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8telepresence%E6%B5%81%E9%87%8F%E8%BD%AC%E5%8F%91/</link>
      <pubDate>Thu, 03 Nov 2022 19:45:56 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8telepresence%E6%B5%81%E9%87%8F%E8%BD%AC%E5%8F%91/</guid>
      <description>简介 yaml工程师在开发时想从本机直连k8s集群的服务,或者将集群内的请求流量劫持到本机进行处理, 都很麻烦,Telepresence 这个工具</description>
    </item>
    
    <item>
      <title>Krustlet使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/krustlet%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 27 Oct 2022 00:41:02 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/krustlet%E4%BD%BF%E7%94%A8/</guid>
      <description>前置条件 准备一个k8s集群,版本1.24,本机操作在mac上,已经安装好kubelet并配置好~/.kube/config 1 2 curl -LO &amp;#34;https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl&amp;#34; curl</description>
    </item>
    
    <item>
      <title>Harbor安装与containerd</title>
      <link>http://inksnw.asuscomm.com:3001/post/harbor%E5%AE%89%E8%A3%85%E4%B8%8Econtainerd/</link>
      <pubDate>Fri, 30 Sep 2022 17:14:14 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/harbor%E5%AE%89%E8%A3%85%E4%B8%8Econtainerd/</guid>
      <description>harbor安装 下载离线安装包700M 1 wget https://mirrors.tuna.tsinghua.edu.cn/github-release/goharbor/harbor/v2.6.0/harbor-offline-installer-v2.6.0.tgz 解压从harbor.yml.tmpl复制一份harbor.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16</description>
    </item>
    
    <item>
      <title>Fluent Bit日志收集</title>
      <link>http://inksnw.asuscomm.com:3001/post/fluent-bit%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/</link>
      <pubDate>Wed, 28 Sep 2022 00:31:21 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/fluent-bit%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/</guid>
      <description>组件 fluent-bit 负责解析及数据过滤 fluentd 负责接收fluent-bit解析后的数据,发送到mq等 安装测试 文档: https://docs.fluentbit.io/manual/installation/getting-started-with-fluent-bit 1 2 helm repo add fluent https://fluent.github.io/helm-charts helm upgrade --install fluent-bit fluent/fluent-bit 默认安装的日志收集配</description>
    </item>
    
    <item>
      <title>OpenTelemetry使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/opentelemetry%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 25 Sep 2022 17:47:24 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/opentelemetry%E4%BD%BF%E7%94%A8/</guid>
      <description>什么是OpenTelemetry OpenTelemetry:实现Metrics ,Tracing , Logging 的融合及大一统，作为APM的数据采集终极解决方案。 Tra</description>
    </item>
    
    <item>
      <title>Cert Manager使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/cert-manager%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 23 Sep 2022 14:11:28 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/cert-manager%E4%BD%BF%E7%94%A8/</guid>
      <description>cert-manager 工作原理 cert-manager 部署到 Kubernetes 集群后，它会 watch 它所支持的 CRD 资源，我们通过创建 CRD 资源来指示 cert-manager 为我们签发证书并自动续期: 几个关键的资源: Issuer/ClusterIssuer: 用于指示 cert-manager 用什么方</description>
    </item>
    
    <item>
      <title>CoreDNS使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/coredns%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 22 Sep 2022 15:56:54 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/coredns%E4%BD%BF%E7%94%A8/</guid>
      <description>普通使用 下载二进制文件 1 https://github.com/coredns/coredns/releases/tag/v1.10.0 创建配置文件 1 2 3 4 .:53 { forward . 114.114.114.114 log } 目录结构 1 2 3 4 5 . ├── Corefile └── coredns 0 directories, 2 files 启动 1 ./coredns dig命令 查询DNS包括NS</description>
    </item>
    
    <item>
      <title>写一个cni插件</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E5%86%99%E4%B8%80%E4%B8%AAcni%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Mon, 19 Sep 2022 09:53:04 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/%E5%86%99%E4%B8%80%E4%B8%AAcni%E6%8F%92%E4%BB%B6/</guid>
      <description>什么是CNI CNI是Kubernetes提供的网络接口。要使用CNI，需要在kubelet上加参数–network-plugin=cni，需</description>
    </item>
    
    <item>
      <title>Prometheus简单使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/prometheus/</link>
      <pubDate>Wed, 24 Aug 2022 15:11:03 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/prometheus/</guid>
      <description>安装prometheus operator 1 2 3 4 helm repo add prometheus-community https://prometheus-community.github.io/helm-charts helm repo update kubectl create ns monitor helm install myprometheus prometheus-community/kube-prometheus-stack -n monitor 报错解决 plugin type=&amp;ldquo;calico&amp;rdquo; failed (add): error getting ClusterInformation: connection is unauthorized: Unauthorized 删除 /etc/cni/net.d/下的文</description>
    </item>
    
    <item>
      <title>Istio与jaeger</title>
      <link>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8Ejaeger/</link>
      <pubDate>Wed, 17 Aug 2022 22:37:31 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8Ejaeger/</guid>
      <description>暴露出istio自带的jaeger 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 apiVersion: networking.istio.io/v1beta1 kind: Gateway metadata: name: tracing-gateway namespace: istio-system spec:</description>
    </item>
    
    <item>
      <title>Envoy转换grpc为http</title>
      <link>http://inksnw.asuscomm.com:3001/post/envoy%E8%BD%AC%E6%8D%A2grpc%E4%B8%BAhttp/</link>
      <pubDate>Wed, 17 Aug 2022 17:29:33 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/envoy%E8%BD%AC%E6%8D%A2grpc%E4%B8%BAhttp/</guid>
      <description>文档 https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/grpc_json_transcoder_filter 环境准备 Gateway 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 apiVersion: networking.istio.io/v1beta1 kind: Gateway metadata: name: grpc-gateway namespace: myistio spec: selector: istio: grpc-ingressgateway servers: - port: number: 80 name: grpc protocol: GRPC hosts: - &amp;#34;*&amp;#34; VirtualService 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 apiVersion: networking.istio.io/v1beta1 kind: VirtualService metadata:</description>
    </item>
    
    <item>
      <title>EnvoyFilter</title>
      <link>http://inksnw.asuscomm.com:3001/post/envoyfilter/</link>
      <pubDate>Wed, 17 Aug 2022 15:28:29 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/envoyfilter/</guid>
      <description>文档 https://istio.io/latest/docs/reference/config/networking/envoy-filter/#EnvoyFilter 使用EnvoyFilter修改某些字段的值，添加特定的过滤器，甚至添加全新的侦听器，群集等 1、网络过滤器（Network Filters</description>
    </item>
    
    <item>
      <title>istio与证书</title>
      <link>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8E%E8%AF%81%E4%B9%A6/</link>
      <pubDate>Tue, 16 Aug 2022 17:00:50 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8E%E8%AF%81%E4%B9%A6/</guid>
      <description>环境准备 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66</description>
    </item>
    
    <item>
      <title>Istio与grpc</title>
      <link>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8Egrpc/</link>
      <pubDate>Tue, 16 Aug 2022 15:38:47 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8Egrpc/</guid>
      <description>准备一套grpc示例代码,参考 istio配置 查看gateway配置文件 1 istioctl profile dump --config-path components demo 创建grpc专用gateway 1 2 3 4 5 6 7 8 9 10 11 12 13</description>
    </item>
    
    <item>
      <title>istio授权策略</title>
      <link>http://inksnw.asuscomm.com:3001/post/istio%E6%8E%88%E6%9D%83%E7%AD%96%E7%95%A5/</link>
      <pubDate>Mon, 15 Aug 2022 10:27:37 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/istio%E6%8E%88%E6%9D%83%E7%AD%96%E7%95%A5/</guid>
      <description>Istio授权策略可对网格中的工作负载进行访问控制.类似spring security,casbin action ALLOW 或者DENY、AUDIT、CUSTOM 同时支持允许和拒绝策略。如同</description>
    </item>
    
    <item>
      <title>istio与jwt</title>
      <link>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8Ejwt/</link>
      <pubDate>Mon, 15 Aug 2022 10:27:37 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8Ejwt/</guid>
      <description>环境准备 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66</description>
    </item>
    
    <item>
      <title>nginx-ingress</title>
      <link>http://inksnw.asuscomm.com:3001/post/nginx-ingress/</link>
      <pubDate>Fri, 12 Aug 2022 10:27:37 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/nginx-ingress/</guid>
      <description>安装 ingress的本质就是一个南北向的网关,内置一个Nginx,控制器(Operator)监听ingress变化, reload nginx 配置 参考文档: https://kubernetes.github.io/ingress-nginx/deploy/ 1 ➜</description>
    </item>
    
    <item>
      <title>K8s权限</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E6%9D%83%E9%99%90/</link>
      <pubDate>Wed, 10 Aug 2022 00:27:31 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E6%9D%83%E9%99%90/</guid>
      <description>证书生成 生成证书文件 1 2 3 openssl genrsa -out client.key 2048 openssl req -new -key client.key -out client.csr -subj &amp;#34;/CN=user1&amp;#34; openssl x509 -req -in client.csr -CA /etc/kubernetes/pki/ca.crt -CAkey /etc/kubernetes/pki/ca.key -CAcreateserial -out client.crt -days 365 生成如下文件 1 2 3 4 . ├── client.crt ├── client.csr └── client.key 查看k8s的</description>
    </item>
    
    <item>
      <title>Kubebuilder笔记</title>
      <link>http://inksnw.asuscomm.com:3001/post/kubebuilder%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Tue, 09 Aug 2022 23:47:44 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/kubebuilder%E7%AC%94%E8%AE%B0/</guid>
      <description>记录一下方便自己使用 1 2 3 4 5 6 7 8 9 10 mkdir myoperator cd myoperator go mod init myoperator kubebuilder init --domain my.domain kubebuilder create api --group webapp --version v1 --kind Guestbook #Create Resource [y/n] #y #Create Controller [y/n] #y make generate</description>
    </item>
    
    <item>
      <title>Istio简单使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/istio%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 30 Jun 2022 10:27:37 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/istio%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</guid>
      <description>安装 主程序 参考文档: https://istio.io/latest/zh/docs/setup/install/ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 ➜ brew install istioctl # 查看 istioctl 可安装的模式 ➜ istioctl profile list Istio configuration profiles: default demo empty minimal openshift preview remote ➜ istioctl install --set profile=demo # 查看安装了什么 ➜ kubectl</description>
    </item>
    
    <item>
      <title>OpenELB使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/openelb%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 22 Jun 2022 11:01:26 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/openelb%E4%BD%BF%E7%94%A8/</guid>
      <description>二层网络即流量都在一个二层网络中。此模式借助其他组件例如Kube-proxy，来实现负载均衡。OpenELB会把svc的ip配置在K8S集群</description>
    </item>
    
    <item>
      <title>Iptables与ipvs</title>
      <link>http://inksnw.asuscomm.com:3001/post/iptables%E4%B8%8Eipvs/</link>
      <pubDate>Wed, 25 May 2022 11:07:01 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/iptables%E4%B8%8Eipvs/</guid>
      <description>iptables filter表 1 2 3 iptables -F #清空（flush） iptables -X #删除指定表中用户自定义的规则链（delete-chain） iptables -nvL -t filter --line-number 1 2 3 4 5 6 #追加 iptables</description>
    </item>
    
    <item>
      <title>Vxlan使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/vxlan%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 25 May 2022 11:05:09 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/vxlan%E4%BD%BF%E7%94%A8/</guid>
      <description>vxlan VXLAN是Virtual eXtensible Local Area Network的缩写,是一个在传统Layer 3网络上架设出来的Layer 2 overlay网络 点对点模式 在逻</description>
    </item>
    
    <item>
      <title>Kubefed使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/kubefed%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 25 May 2022 11:01:26 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/kubefed%E4%BD%BF%E7%94%A8/</guid>
      <description>安装配置 1 helm --namespace kube-federation-system upgrade -i kubefed kubefed-charts/kubefed --version=0.9.1 --create-namespace 安装kubefedctl二进制 配置kube-config上下文: Mac 上可以使用一个叫 kubecontext的小工具</description>
    </item>
    
    <item>
      <title>K8s基础知识</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Wed, 25 May 2022 10:36:08 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description></description>
    </item>
    
    <item>
      <title>runc的使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/runc/</link>
      <pubDate>Tue, 24 May 2022 21:24:41 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/runc/</guid>
      <description>runc 是一个命令行客户端，用于运行根据 Open Container Initiative (OCI) 格式打包的应用程序 上图是k8s调用containerd到拉起pod进程的流程,拉起pod这个过程是</description>
    </item>
    
  </channel>
</rss>
