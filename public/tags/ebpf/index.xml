<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ebpf on </title>
    <link>http://inksnw.asuscomm.com:3001/tags/ebpf/</link>
    <description>Recent content in ebpf on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 17 Jun 2023 14:04:53 +0800</lastBuildDate><atom:link href="http://inksnw.asuscomm.com:3001/tags/ebpf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ebpf简单使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/ebpf/</link>
      <pubDate>Sat, 17 Jun 2023 14:04:53 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/ebpf/</guid>
      <description>第一个 eBPF 程序 安装ecli 1 wget https://aka.pw/bpf-ecli 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #define BPF_NO_GLOBAL_DATA #include &amp;lt;linux/bpf.h&amp;gt; #include &amp;lt;bpf/bpf_helpers.h&amp;gt; #include &amp;lt;bpf/bpf_tracing.h&amp;gt; typedef unsigned int u32; typedef int pid_t; const pid_t pid_filter = 0; char LICENSE[] SEC(&amp;#34;license&amp;#34;) = &amp;#34;Dual BSD/GPL&amp;#34;; SEC(&amp;#34;tp/syscalls/sys_enter_write&amp;#34;) int handle_tp(void *ctx) { pid_t pid = bpf_get_current_pid_tgid()</description>
    </item>
    
  </channel>
</rss>
