<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ebpf on </title>
    <link>http://inksnw.asuscomm.com:3001/tags/ebpf/</link>
    <description>Recent content in ebpf on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 07 Dec 2023 23:11:38 +0800</lastBuildDate>
    <atom:link href="http://inksnw.asuscomm.com:3001/tags/ebpf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cilium本地路由</title>
      <link>http://inksnw.asuscomm.com:3001/post/cilium%E6%9C%AC%E5%9C%B0%E8%B7%AF%E7%94%B1/</link>
      <pubDate>Thu, 07 Dec 2023 23:11:38 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/cilium%E6%9C%AC%E5%9C%B0%E8%B7%AF%E7%94%B1/</guid>
      <description>安装 使用 Helm Chart 进行基本安装 1 2 3 4 5 6 7 8 helm repo add cilium https://helm.cilium.io/ helm install cilium cilium/cilium --version 1.14.4 \ --namespace kube-system \ --set operator.replicas=1 \ --set k8sServiceHost=192.168.50.50 \ --set k8sServicePort=6443 \ --set hubble.relay.enabled=true \ --set hubble.ui.enabled=true 重启所有已运行但未以主机联网模式运行的 po</description>
    </item>
    <item>
      <title>Ebpf双向传输</title>
      <link>http://inksnw.asuscomm.com:3001/post/ebpf%E5%8F%8C%E5%90%91%E4%BC%A0%E8%BE%93/</link>
      <pubDate>Tue, 24 Oct 2023 11:38:41 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/ebpf%E5%8F%8C%E5%90%91%E4%BC%A0%E8%BE%93/</guid>
      <description>提供一个eBPF中内核态和用户态之间的双向数据传输的demo 环境准备 准备一个Ubuntu 22.04 1 2 3 sudo apt-get update sudo apt-get install -y gcc-multilib llvm clang go install github.com/cilium/ebpf/cmd/bpf2go@latest 接下来，我们需要一</description>
    </item>
    <item>
      <title>Cilium初探</title>
      <link>http://inksnw.asuscomm.com:3001/post/cilium%E5%88%9D%E6%8E%A2/</link>
      <pubDate>Wed, 26 Jul 2023 10:28:48 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/cilium%E5%88%9D%E6%8E%A2/</guid>
      <description>安装 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 apiVersion: kubekey.kubesphere.io/v1alpha2 kind: Cluster metadata: name: sample spec: hosts: - {name: node1, address: 192.168.50.50, internalAddress: 192.168.50.50, user: root, password: &amp;#34;123&amp;#34;} - {name: node2, address: 192.168.50.51, internalAddress: 192.168.50.51, user:</description>
    </item>
    <item>
      <title>Ebpf简单使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/ebpf/</link>
      <pubDate>Sat, 17 Jun 2023 14:04:53 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/ebpf/</guid>
      <description>第一个 eBPF 程序 安装ecli 1 wget https://aka.pw/bpf-ecli 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #define BPF_NO_GLOBAL_DATA #include &amp;lt;linux/bpf.h&amp;gt; #include &amp;lt;bpf/bpf_helpers.h&amp;gt; #include &amp;lt;bpf/bpf_tracing.h&amp;gt; typedef unsigned int u32; typedef int pid_t; const pid_t pid_filter = 0; char LICENSE[] SEC(&amp;#34;license&amp;#34;) = &amp;#34;Dual BSD/GPL&amp;#34;; SEC(&amp;#34;tp/syscalls/sys_enter_write&amp;#34;) int handle_tp(void *ctx) { pid_t pid = bpf_get_current_pid_tgid()</description>
    </item>
  </channel>
</rss>
