<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on </title>
    <link>http://inksnw.asuscomm.com:3001/post/</link>
    <description>Recent content in Posts on </description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 22 Aug 2024 11:09:17 +0800</lastBuildDate>
    <atom:link href="http://inksnw.asuscomm.com:3001/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Helm的oci源</title>
      <link>http://inksnw.asuscomm.com:3001/post/helm%E7%9A%84oci%E6%BA%90/</link>
      <pubDate>Tue, 23 Jul 2024 11:49:25 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/helm%E7%9A%84oci%E6%BA%90/</guid>
      <description>从Helm 3开始，可以使用具有 OCI支持的容器注册中心来存储和共享chart包。从Helm v3.8.0开始，默认启用OCI支持。 详细的操作官</description>
    </item>
    <item>
      <title>Helm库的tls问题</title>
      <link>http://inksnw.asuscomm.com:3001/post/helm%E5%BA%93%E7%9A%84tls%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 24 Jun 2024 15:13:34 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/helm%E5%BA%93%E7%9A%84tls%E9%97%AE%E9%A2%98/</guid>
      <description>最近使用helm sdk实现配置repo源,默认使用跳过tls验证参数, 发现v3.11.1 版本可以正常工作, v3.14.1 版本部分源不能正常工作, 报错 tls: handshake</description>
    </item>
    <item>
      <title>K8s配置gpu</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E9%85%8D%E7%BD%AEgpu/</link>
      <pubDate>Wed, 29 May 2024 11:02:12 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E9%85%8D%E7%BD%AEgpu/</guid>
      <description>又不是不能用 一直想研究一下k8s配置 gpu, 但是现在的显卡也太贵了, 家里服务器的显卡是张 GT710 使用 nvidia-smi 不认, 今天才发现驱动版本太高, 降低就可以了, 1G 显存</description>
    </item>
    <item>
      <title>Webhook生成证书</title>
      <link>http://inksnw.asuscomm.com:3001/post/webhook%E7%94%9F%E6%88%90%E8%AF%81%E4%B9%A6/</link>
      <pubDate>Tue, 28 May 2024 12:48:47 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/webhook%E7%94%9F%E6%88%90%E8%AF%81%E4%B9%A6/</guid>
      <description>创建一个webhook服务 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57</description>
    </item>
    <item>
      <title>机器学习一:手写数字识别</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B8%80%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E8%AF%86%E5%88%AB/</link>
      <pubDate>Wed, 15 May 2024 22:15:33 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B8%80%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E8%AF%86%E5%88%AB/</guid>
      <description>手写数字识别 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64</description>
    </item>
    <item>
      <title>Go Containerregistry库的一个小坑</title>
      <link>http://inksnw.asuscomm.com:3001/post/go-containerregistry%E5%BA%93%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%8F%E5%9D%91/</link>
      <pubDate>Wed, 15 May 2024 16:34:18 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/go-containerregistry%E5%BA%93%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%8F%E5%9D%91/</guid>
      <description>先说结论: Containerregistry 库会先尝试访问443, 再回落到80, 如果网络不通就会卡住 起因 客户反应私有源查询镜像是正常的, 查询镜像版本就会卡住 排查 使用shel</description>
    </item>
    <item>
      <title>本地签发证书代理https</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E6%9C%AC%E5%9C%B0%E7%AD%BE%E5%8F%91%E8%AF%81%E4%B9%A6%E4%BB%A3%E7%90%86https/</link>
      <pubDate>Wed, 10 Apr 2024 10:12:54 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E6%9C%AC%E5%9C%B0%E7%AD%BE%E5%8F%91%E8%AF%81%E4%B9%A6%E4%BB%A3%E7%90%86https/</guid>
      <description>mac下使用nginx 一些配置 1 2 3 4 5 brew install nginx brew services start nginx brew services list brew services stop nginx brew services restart nginx 重新加载配置文件 1 nginx -s reload 验证nginx配置文件是否正确 1 nginx -t 配置</description>
    </item>
    <item>
      <title>本地搭建helm源</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BAhelm%E6%BA%90/</link>
      <pubDate>Sun, 28 Jan 2024 15:33:30 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BAhelm%E6%BA%90/</guid>
      <description>helm源本质就是一个url/index.yaml 可以获取到helm包的下载地址等信息, 可以使用github page, harbor等作为helm 源 chartmuseum</description>
    </item>
    <item>
      <title>一个oauth示例</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%B8%80%E4%B8%AAoauth%E7%A4%BA%E4%BE%8B/</link>
      <pubDate>Tue, 23 Jan 2024 13:30:50 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%B8%80%E4%B8%AAoauth%E7%A4%BA%E4%BE%8B/</guid>
      <description>oauth2的本质就是你想进一家工厂, 但是门卫说你没证件你不能进, 你说我有隔壁厂子的证件, 你们都认识, 可以不, 他说也行, 于是根据你隔壁 厂的信</description>
    </item>
    <item>
      <title>劫持docker.io到镜像源</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E5%8A%AB%E6%8C%81docker.io%E5%88%B0%E9%95%9C%E5%83%8F%E6%BA%90/</link>
      <pubDate>Thu, 11 Jan 2024 18:07:55 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E5%8A%AB%E6%8C%81docker.io%E5%88%B0%E9%95%9C%E5%83%8F%E6%BA%90/</guid>
      <description>dockerhub限流真是烦人, 配置镜像源又得一台台的改docker配置, 有没有其它办法, 比如截持一下, 直接转发到镜像源 自签证书 创建 CA 根证书</description>
    </item>
    <item>
      <title>Containerlab基础使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/containerlab%E5%88%9D%E8%AF%95/</link>
      <pubDate>Sat, 30 Dec 2023 10:06:06 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/containerlab%E5%88%9D%E8%AF%95/</guid>
      <description>基本概念 Containerlab根据用户传递给它的拓扑信息来建立实验,构建网络交换和路由, 是一个很方便的学习工具 安装 官方文档(https:/</description>
    </item>
    <item>
      <title>查看容器重启前日志</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E6%9F%A5%E7%9C%8B%E5%AE%B9%E5%99%A8%E9%87%8D%E5%90%AF%E5%89%8D%E6%97%A5%E5%BF%97/</link>
      <pubDate>Wed, 20 Dec 2023 22:39:19 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E6%9F%A5%E7%9C%8B%E5%AE%B9%E5%99%A8%E9%87%8D%E5%90%AF%E5%89%8D%E6%97%A5%E5%BF%97/</guid>
      <description>背景 pod已经重启, 如何查看重启前日志, 先说结论使用-p 参数即可 1 2 3 4 5 6 7 8 root@node1:~# kubectl logs demo -p=true Server listening on :8080 Request received panic: Overslept! goroutine 1 [running]: main.main() /Users/inksnw/Desktop/awesomeProject/main.go:15 +0x59 复现 写一个程序 1 2 3 4</description>
    </item>
    <item>
      <title>升级带controller的crd</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E5%8D%87%E7%BA%A7%E5%B8%A6controller%E7%9A%84crd/</link>
      <pubDate>Mon, 11 Dec 2023 17:08:47 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E5%8D%87%E7%BA%A7%E5%B8%A6controller%E7%9A%84crd/</guid>
      <description>要升级一个crd,由crd1到crd2, 变更非常大,已经是不同的group, version 了, 所以不能用同一个crd的不同版本解决, 手动完成了两个cr的</description>
    </item>
    <item>
      <title>Cilium(二)本地路由</title>
      <link>http://inksnw.asuscomm.com:3001/post/cilium%E6%9C%AC%E5%9C%B0%E8%B7%AF%E7%94%B1/</link>
      <pubDate>Thu, 07 Dec 2023 23:11:38 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/cilium%E6%9C%AC%E5%9C%B0%E8%B7%AF%E7%94%B1/</guid>
      <description>安装 使用 Helm Chart 进行基本安装 1 2 3 4 5 6 7 8 helm repo add cilium https://helm.cilium.io/ helm install cilium cilium/cilium --version 1.14.4 \ --namespace kube-system \ --set operator.replicas=1 \ --set k8sServiceHost=192.168.50.50 \ --set k8sServicePort=6443 \ --set hubble.relay.enabled=true \ --set hubble.ui.enabled=true 重启所有已运行但未以主机联网模式运行的 po</description>
    </item>
    <item>
      <title>Kubelet证书过期分析</title>
      <link>http://inksnw.asuscomm.com:3001/post/kubelet%E8%AF%81%E4%B9%A6%E8%BF%87%E6%9C%9F%E5%88%86%E6%9E%90/</link>
      <pubDate>Sun, 03 Dec 2023 10:31:47 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/kubelet%E8%AF%81%E4%B9%A6%E8%BF%87%E6%9C%9F%E5%88%86%E6%9E%90/</guid>
      <description>源自一次环境问题, kubelet重启后, 报错 &amp;ldquo;command failed&amp;rdquo; err=&amp;ldquo;failed to run Kubelet: unable to load bootstrap kubeconfig: stat /etc/kubernetes/bootstrap-kubelet.conf: no such file or directory&amp;rdquo; bootstrap-kubelet.conf 文件主机上确实没有, 他的作用是什么, 这里简单分析一下 官方文</description>
    </item>
    <item>
      <title>Webhook影响k8s全局gc</title>
      <link>http://inksnw.asuscomm.com:3001/post/webhook%E5%BD%B1%E5%93%8Dk8s%E5%85%A8%E5%B1%80gc/</link>
      <pubDate>Tue, 21 Nov 2023 10:31:12 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/webhook%E5%BD%B1%E5%93%8Dk8s%E5%85%A8%E5%B1%80gc/</guid>
      <description>源于一次环境异常, 发现删除deploy时, pod不会被自动清除 复现 提交一个带Webhook 的crd 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21</description>
    </item>
    <item>
      <title>Ebpf双向传输</title>
      <link>http://inksnw.asuscomm.com:3001/post/ebpf%E5%8F%8C%E5%90%91%E4%BC%A0%E8%BE%93/</link>
      <pubDate>Tue, 24 Oct 2023 11:38:41 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/ebpf%E5%8F%8C%E5%90%91%E4%BC%A0%E8%BE%93/</guid>
      <description>提供一个eBPF中内核态和用户态之间的双向数据传输的demo 环境准备 准备一个Ubuntu 22.04 1 2 3 sudo apt-get update sudo apt-get install -y gcc-multilib llvm clang go install github.com/cilium/ebpf/cmd/bpf2go@latest 接下来，我们需要一</description>
    </item>
    <item>
      <title>Kubectl的cp命令核心原理</title>
      <link>http://inksnw.asuscomm.com:3001/post/kubectl%E7%9A%84cp%E5%91%BD%E4%BB%A4%E6%A0%B8%E5%BF%83%E5%8E%9F%E7%90%86/</link>
      <pubDate>Mon, 16 Oct 2023 11:45:56 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/kubectl%E7%9A%84cp%E5%91%BD%E4%BB%A4%E6%A0%B8%E5%BF%83%E5%8E%9F%E7%90%86/</guid>
      <description>kubectl cp 命令核心原理是利用exec命令调用tar命令结合linux管道实现, 因此kubectl源码中也写到, 需要保证容器有tar命令 源码位置 staging/src/k8s.io/kubectl/pkg/cmd/cp/cp.go 4</description>
    </item>
    <item>
      <title>Pod原地升级</title>
      <link>http://inksnw.asuscomm.com:3001/post/pod%E5%8E%9F%E5%9C%B0%E5%8D%87%E7%BA%A7/</link>
      <pubDate>Mon, 18 Sep 2023 15:17:12 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/pod%E5%8E%9F%E5%9C%B0%E5%8D%87%E7%BA%A7/</guid>
      <description>什么是原地升级？ 原地升级（In-place update）是一种 Kubernetes 中的 Pod 升级方式，这种升级方式可以更新 Pod 中某一个或多个容器的镜像版本，而不影响</description>
    </item>
    <item>
      <title>K8s运行流程追踪</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B%E8%BF%BD%E8%B8%AA/</link>
      <pubDate>Fri, 15 Sep 2023 13:42:20 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B%E8%BF%BD%E8%B8%AA/</guid>
      <description>k8s从1.27 开始 OpenTelemetry 进入了beta状态, 在此之前要开启还需要配置featureGates, 本以为通过这个追踪可以把很细的步骤都展示出来, 实</description>
    </item>
    <item>
      <title>Crd更新status</title>
      <link>http://inksnw.asuscomm.com:3001/post/crd%E6%9B%B4%E6%96%B0status/</link>
      <pubDate>Wed, 13 Sep 2023 15:42:13 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/crd%E6%9B%B4%E6%96%B0status/</guid>
      <description>crd的status字段，如果要更新，需要使用UpdateStatus方法 创建crd与cr 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25</description>
    </item>
    <item>
      <title>用聚合api实现抽象资源</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E7%94%A8%E8%81%9A%E5%90%88api%E5%AE%9E%E7%8E%B0%E6%8A%BD%E8%B1%A1%E8%B5%84%E6%BA%90/</link>
      <pubDate>Tue, 05 Sep 2023 17:10:45 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E7%94%A8%E8%81%9A%E5%90%88api%E5%AE%9E%E7%8E%B0%E6%8A%BD%E8%B1%A1%E8%B5%84%E6%BA%90/</guid>
      <description>背景 计算机行业, 没有什么不能加一层缓存实现, 但是也带来了一个常见问题, 如何保持数据一致. 比如你在阿里云和腾讯云各创建了三台主机, 现在要做一个</description>
    </item>
    <item>
      <title>Kubernetes中拉取带凭证的容器镜像</title>
      <link>http://inksnw.asuscomm.com:3001/post/kubernetes%E4%B8%AD%E6%8B%89%E5%8F%96%E5%B8%A6%E5%87%AD%E8%AF%81%E7%9A%84%E5%AE%B9%E5%99%A8%E9%95%9C%E5%83%8F/</link>
      <pubDate>Wed, 30 Aug 2023 20:29:51 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/kubernetes%E4%B8%AD%E6%8B%89%E5%8F%96%E5%B8%A6%E5%87%AD%E8%AF%81%E7%9A%84%E5%AE%B9%E5%99%A8%E9%95%9C%E5%83%8F/</guid>
      <description>k8s 拉取带凭据的镜像源时, 需要配置拉取凭据, 或者是 Docker限制镜像拉取次数, 匿名用户达到上限时可以登录一下临时续一下命 有几种办法 配置到ku</description>
    </item>
    <item>
      <title>CGroups限制网络速度</title>
      <link>http://inksnw.asuscomm.com:3001/post/cgroups%E9%99%90%E5%88%B6/</link>
      <pubDate>Mon, 21 Aug 2023 09:48:35 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/cgroups%E9%99%90%E5%88%B6/</guid>
      <description>在Linux系统中，tc（Traffic Control）是一个用于控制网络流量的工具，它可以用来限制传输速率、模拟网络延迟、丢包等场景。主要</description>
    </item>
    <item>
      <title>自定义日志库实现行号打印及跳转</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%97%A5%E5%BF%97%E5%BA%93%E5%AE%9E%E7%8E%B0%E8%A1%8C%E5%8F%B7%E6%89%93%E5%8D%B0%E5%8F%8A%E8%B7%B3%E8%BD%AC/</link>
      <pubDate>Mon, 14 Aug 2023 16:55:30 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%97%A5%E5%BF%97%E5%BA%93%E5%AE%9E%E7%8E%B0%E8%A1%8C%E5%8F%B7%E6%89%93%E5%8D%B0%E5%8F%8A%E8%B7%B3%E8%BD%AC/</guid>
      <description>为了方便调试和排查问题，我们经常需要在日志中包含详细的行号信息，并且最好能够直接跳转到相关代码位置。 但很多时候日志库只有文件名, 并不能点击跳</description>
    </item>
    <item>
      <title>Kubelet证书轮换与更新</title>
      <link>http://inksnw.asuscomm.com:3001/post/kubelet%E8%AF%81%E4%B9%A6%E8%BD%AE%E6%8D%A2/</link>
      <pubDate>Tue, 08 Aug 2023 21:03:59 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/kubelet%E8%AF%81%E4%B9%A6%E8%BD%AE%E6%8D%A2/</guid>
      <description>组件证书 使用如下命令查看证书过期时间： 1 2 kubeadm certs check-expiration openssl x509 -in /etc/kubernetes/pki/apiserver.crt -noout -text | egrep Not 手动更新证书 1 kubeadm certs renew all 更新各种config 1 2 3 4 5 6 7 kubeadm init phase kubeconfig all I0811 18:11:06.477258 61845 version.go:256]</description>
    </item>
    <item>
      <title>本地调试k8s</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E6%9C%AC%E5%9C%B0%E8%B0%83%E8%AF%95k8s/</link>
      <pubDate>Wed, 02 Aug 2023 10:53:21 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E6%9C%AC%E5%9C%B0%E8%B0%83%E8%AF%95k8s/</guid>
      <description>背景: 有时候想详细理解一下k8s的运作流程, 硬看代码实在很难调试, 所以试着在mac上搭建k8s控制平面的编译环境 准备一台干净的ubuntu主</description>
    </item>
    <item>
      <title>K8s更新crd会发生什么</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E6%9B%B4%E6%96%B0crd%E4%BC%9A%E5%8F%91%E7%94%9F%E4%BB%80%E4%B9%88/</link>
      <pubDate>Fri, 28 Jul 2023 14:43:36 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E6%9B%B4%E6%96%B0crd%E4%BC%9A%E5%8F%91%E7%94%9F%E4%BB%80%E4%B9%88/</guid>
      <description>K8s更新crd会发生什么(1.26) 模拟测试 先清空 1 kubectl delete crd examples.example.com 创建一个CRD，例如我们创建一个名为 example.com 的 CRD，资源类型为 Example： 1 2</description>
    </item>
    <item>
      <title>通过kube Router学习网络</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E9%80%9A%E8%BF%87kube-router%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Thu, 27 Jul 2023 10:57:51 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E9%80%9A%E8%BF%87kube-router%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%BB%9C/</guid>
      <description>一直以来想详细的梳理清楚cni这块, 但知识总是比较零碎, 恰好看到了kube-router 这个项目, cni,bgp,ipvs全囊括了, 好吧就它</description>
    </item>
    <item>
      <title>Cilium(一)安装</title>
      <link>http://inksnw.asuscomm.com:3001/post/cilium%E5%88%9D%E6%8E%A2/</link>
      <pubDate>Wed, 26 Jul 2023 10:28:48 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/cilium%E5%88%9D%E6%8E%A2/</guid>
      <description>安装 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 apiVersion: kubekey.kubesphere.io/v1alpha2 kind: Cluster metadata: name: sample spec: hosts: - {name: node1, address: 192.168.50.50, internalAddress: 192.168.50.50, user: root, password: &amp;#34;123&amp;#34;} - {name: node2, address: 192.168.50.51, internalAddress: 192.168.50.51, user:</description>
    </item>
    <item>
      <title>事件驱动获取容器状态信息</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8%E8%8E%B7%E5%8F%96%E5%AE%B9%E5%99%A8%E7%8A%B6%E6%80%81%E4%BF%A1%E6%81%AF/</link>
      <pubDate>Mon, 24 Jul 2023 11:43:37 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8%E8%8E%B7%E5%8F%96%E5%AE%B9%E5%99%A8%E7%8A%B6%E6%80%81%E4%BF%A1%E6%81%AF/</guid>
      <description>配置containerd 1 2 3 wget https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz # 解压包中的二进制到 /usr/local/bin/ tar -zxvf containerd-1.7.2-linux-amd64.tar.gz -C /usr/local/ 生成配置文件 1 2 mkdir -p /etc/containerd containerd config default &amp;gt; /etc/containerd/config.toml 修改 /etc/containerd/con</description>
    </item>
    <item>
      <title>使用go-libvirt操作kvm</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8go-libvirt%E6%93%8D%E4%BD%9Ckvm/</link>
      <pubDate>Fri, 21 Jul 2023 19:03:29 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8go-libvirt%E6%93%8D%E4%BD%9Ckvm/</guid>
      <description>配置libvird远程连接 修改/etc/libvirt/libvirtd.conf中 1 2 3 4 5 listen_tls = 0 listen_tcp = 1 tcp_port = &amp;#34;16509&amp;#34; listen_addr = &amp;#34;0.0.0.0&amp;#34; auth_tcp = &amp;#34;none&amp;#34; 修改/etc/d</description>
    </item>
    <item>
      <title>Etcd性能测试</title>
      <link>http://inksnw.asuscomm.com:3001/post/etcd%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Mon, 17 Jul 2023 18:10:12 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/etcd%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</guid>
      <description>基础配置 1 2 3 4 5 6 7 alias etcdctl=&amp;#39;etcdctl --key=/etc/ssl/etcd/ssl/admin-node1-key.pem --cert=/etc/ssl/etcd/ssl/admin-node1.pem --cacert=/etc/ssl/etcd/ssl/ca.pem --endpoints 192.168.50.50:2379&amp;#39; etcdctl -w table member list +------------------+---------+------------+----------------------------+----------------------------+------------+ | ID | STATUS | NAME | PEER ADDRS | CLIENT ADDRS | IS LEARNER | +------------------+---------+------------+----------------------------+----------------------------+------------+ | ae12e8bc550d8bfc | started | etcd-node1 | https://192.168.50.50:2380 | https://192.168.50.50:2379 | false | +------------------+---------+------------+----------------------------+----------------------------+------------+ 压测 1 2 3 4 5 6 7 8 # 不同大小</description>
    </item>
    <item>
      <title>在k8s外部验证bearertoken</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E5%9C%A8k8s%E5%A4%96%E9%83%A8%E9%AA%8C%E8%AF%81bearertoken/</link>
      <pubDate>Wed, 12 Jul 2023 23:42:00 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E5%9C%A8k8s%E5%A4%96%E9%83%A8%E9%AA%8C%E8%AF%81bearertoken/</guid>
      <description>生成token 创建一个sa账号 1 2 3 4 5 6 7 cat&amp;lt;&amp;lt;EOF | kubectl apply -f - apiVersion: v1 kind: ServiceAccount metadata: name: mysa namespace: default EOF Token controller检测service account的创建，并</description>
    </item>
    <item>
      <title>Gobgp使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/gobgp%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 10 Jul 2023 21:00:55 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/gobgp%E4%BD%BF%E7%94%A8/</guid>
      <description>安装环境 1 2 curl -fsSL https://get.docker.com -o get-docker.sh sh get-docker.sh 1 wget https://github.com/osrg/gobgp/releases/download/v3.16.0/gobgp_3.16.0_linux_amd64.tar.gz 对于主机A: 1 2 3 4 5 6 7 8 [global.config] as = 65001 router-id = &amp;#34;192.168.50.116&amp;#34; [[neighbors]] [neighbors.config] neighbor-address = &amp;#34;192.168.50.199&amp;#34; peer-as = 65002 对于主机B: 1 2 3 4 5 6 7 8 [global.config] as = 65002 router-id = &amp;#34;192.168.50.199&amp;#34; [[neighbors]] [neighbors.config] neighbor-address =</description>
    </item>
    <item>
      <title>使用pyroscope追查资源占用</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8pyroscope%E8%BF%BD%E6%9F%A5%E8%B5%84%E6%BA%90%E5%8D%A0%E7%94%A8/</link>
      <pubDate>Mon, 03 Jul 2023 17:54:47 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8pyroscope%E8%BF%BD%E6%9F%A5%E8%B5%84%E6%BA%90%E5%8D%A0%E7%94%A8/</guid>
      <description>Pyroscope是一个开源的持续分析系统，使用Go语言实现。服务端使用web页面查看，提供丰富的分析的功能，客户端提供Go、Java、Py</description>
    </item>
    <item>
      <title>K8s删除crd会发生什么</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E5%88%A0%E9%99%A4crd%E4%BC%9A%E5%8F%91%E7%94%9F%E4%BB%80%E4%B9%88/</link>
      <pubDate>Thu, 29 Jun 2023 13:58:37 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E5%88%A0%E9%99%A4crd%E4%BC%9A%E5%8F%91%E7%94%9F%E4%BB%80%E4%B9%88/</guid>
      <description>源起 源于一次环境问题排查,在创建cr时, 提示 1 (MethodNotAllowed): error when creating &amp;#34;cr1.yaml&amp;#34;: create not allowed while custom resource definition is terminating 先说结论, 这是由于crd处在预删除状态, 因此无法创建cr, 操作删除</description>
    </item>
    <item>
      <title>模拟k8s的watch</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E6%A8%A1%E6%8B%9Fk8s%E7%9A%84watch/</link>
      <pubDate>Wed, 21 Jun 2023 22:46:44 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E6%A8%A1%E6%8B%9Fk8s%E7%9A%84watch/</guid>
      <description>k8s的watch功能本质就是利用http的chunked功能 源码位于k8s.io/apiserver/pkg/endpoints/hand</description>
    </item>
    <item>
      <title>Ebpf简单使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/ebpf/</link>
      <pubDate>Sat, 17 Jun 2023 14:04:53 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/ebpf/</guid>
      <description>第一个 eBPF 程序 安装ecli 1 wget https://aka.pw/bpf-ecli 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #define BPF_NO_GLOBAL_DATA #include &amp;lt;linux/bpf.h&amp;gt; #include &amp;lt;bpf/bpf_helpers.h&amp;gt; #include &amp;lt;bpf/bpf_tracing.h&amp;gt; typedef unsigned int u32; typedef int pid_t; const pid_t pid_filter = 0; char LICENSE[] SEC(&amp;#34;license&amp;#34;) = &amp;#34;Dual BSD/GPL&amp;#34;; SEC(&amp;#34;tp/syscalls/sys_enter_write&amp;#34;) int handle_tp(void *ctx) { pid_t pid = bpf_get_current_pid_tgid()</description>
    </item>
    <item>
      <title>K8s使用外部权限认证</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E4%BD%BF%E7%94%A8%E5%A4%96%E9%83%A8%E6%9D%83%E9%99%90%E8%AE%A4%E8%AF%81/</link>
      <pubDate>Thu, 15 Jun 2023 22:58:57 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E4%BD%BF%E7%94%A8%E5%A4%96%E9%83%A8%E6%9D%83%E9%99%90%E8%AE%A4%E8%AF%81/</guid>
      <description>直接访问 1 https://192.168.50.50:6443/ 访问被禁止 1 2 3 4 5 6 7 8 9 10 { &amp;#34;kind&amp;#34;: &amp;#34;Status&amp;#34;, &amp;#34;apiVersion&amp;#34;: &amp;#34;v1&amp;#34;, &amp;#34;metadata&amp;#34;: {}, &amp;#34;status&amp;#34;: &amp;#34;Failure&amp;#34;, &amp;#34;message&amp;#34;: &amp;#34;forbidden: User \&amp;#34;system:anonymous\&amp;#34; cannot get path \&amp;#34;/\&amp;#34;&amp;#34;, &amp;#34;reason&amp;#34;: &amp;#34;Forbidden&amp;#34;, &amp;#34;details&amp;#34;: {}, &amp;#34;code&amp;#34;: 403 } 配置文件格式 Webhook 模式需要一个 HTTP 配置文件，通过 --authorization-webhook-config-file=SOME_FILENAME 的参数</description>
    </item>
    <item>
      <title>k8s一些工具函数</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E4%B8%80%E4%BA%9B%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/</link>
      <pubDate>Thu, 15 Jun 2023 22:32:54 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E4%B8%80%E4%BA%9B%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/</guid>
      <description>通用的server-side apply 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 package main import ( &amp;#34;context&amp;#34; corev1</description>
    </item>
    <item>
      <title>K8s的exec原理与实践</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E7%9A%84exec%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Thu, 15 Jun 2023 21:31:40 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E7%9A%84exec%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5/</guid>
      <description>exec原理 开启containerd远程连接 修改 /etc/containerd/config.toml文件,允许远程访问 1 2 3 4 5 6 [grpc] tcp_address = &amp;#34;0.0.0.0:8989&amp;#34;</description>
    </item>
    <item>
      <title>K8s网络策略示例</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E7%BD%91%E7%BB%9C%E7%AD%96%E7%95%A5%E7%A4%BA%E4%BE%8B/</link>
      <pubDate>Sat, 27 May 2023 13:01:57 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E7%BD%91%E7%BB%9C%E7%AD%96%E7%95%A5%E7%A4%BA%E4%BE%8B/</guid>
      <description>示例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 apiVersion: networking.k8s.io/v1 kind: NetworkPolicy metadata: name: test-network-policy namespace: default spec: podSelector: matchLabels: role: db policyTypes: - Ingress - Egress ingress: - from: - ipBlock: except: - 172.17.1.0/24 cidr: 172.17.0.0/16 - namespaceSelector: matchLabels: project: myproject</description>
    </item>
    <item>
      <title>使用Charles抓取k8s请求</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8charles%E6%8A%93%E5%8F%96k8s%E8%AF%B7%E6%B1%82/</link>
      <pubDate>Tue, 23 May 2023 16:32:50 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8charles%E6%8A%93%E5%8F%96k8s%E8%AF%B7%E6%B1%82/</guid>
      <description>配置代理 安装Charles,查看设置Proxy-&amp;gt;Proxy Settings,Charles默认监听于8888端口 配置客户端证书 从ku</description>
    </item>
    <item>
      <title>Arangodb简单安装使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/arangodb%E7%AE%80%E5%8D%95%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 20 Apr 2023 10:23:49 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/arangodb%E7%AE%80%E5%8D%95%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</guid>
      <description>安装 1 2 curl -OL https://download.arangodb.com/arangodb310/DEBIAN/Release.key sudo apt-key add - &amp;lt; Release.key 1 2 3 4 echo &amp;#39;deb https://download.arangodb.com/arangodb310/DEBIAN/ /&amp;#39; | sudo tee /etc/apt/sources.list.d/arangodb.list sudo apt-get install apt-transport-https sudo apt-get update sudo apt-get install arangodb3=3.10.5-1 查看安装状态 1 systemctl status arangodb3 配置 1 2 3 4 vi /etc/arangodb3/arangod.conf # 设置 endpoint = tcp://0.0.0.0:8529 authentication = false 重启 1 systemctl restart arangodb3 使</description>
    </item>
    <item>
      <title>Clusterpedia使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/clusterpedia%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 28 Mar 2023 14:56:53 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/clusterpedia%E4%BD%BF%E7%94%A8/</guid>
      <description>Clusterpedia在兼容Kubernetes OpenAPI的基础上，可以实现多集群资源同步，并提供更强大的搜索功能，帮助您高效快捷地获</description>
    </item>
    <item>
      <title>使用sdk操作calico</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8sdk%E6%93%8D%E4%BD%9Ccalico/</link>
      <pubDate>Wed, 22 Mar 2023 10:59:38 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8sdk%E6%93%8D%E4%BD%9Ccalico/</guid>
      <description>官方提供了calicoctl来操作calico, 但是使用sdk时一直提示资源未找到 研究了一下, 发现sdk使用的api版本与calicoctl</description>
    </item>
    <item>
      <title>Docker限制镜像拉取次数</title>
      <link>http://inksnw.asuscomm.com:3001/post/docker%E9%99%90%E5%88%B6%E9%95%9C%E5%83%8F%E6%8B%89%E5%8F%96%E6%AC%A1%E6%95%B0/</link>
      <pubDate>Mon, 27 Feb 2023 15:53:36 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/docker%E9%99%90%E5%88%B6%E9%95%9C%E5%83%8F%E6%8B%89%E5%8F%96%E6%AC%A1%E6%95%B0/</guid>
      <description>查看限制次数 在使用 docker pull 拉取镜像时，遇到如下报错： 1 Error response from daemon: toomanyrequests: You have reached your pull rate limit. You may increase the limit by authenticating and upgrading: https://www.docker.com/increase-rate-limit 2020 年 11 月 20 日，Docker Hub 基于个人 IP 地址对匿</description>
    </item>
    <item>
      <title>控制envoy的几种方式</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E6%8E%A7%E5%88%B6envoy%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Fri, 17 Feb 2023 15:40:43 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E6%8E%A7%E5%88%B6envoy%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</guid>
      <description>安装 1 brew install envoy 静态文件 下载示例配置文件 envoy-demo.yaml 并启动 1 envoy -c envoy-demo.yaml 修改示例配置中的转发地址为 www.baidu.com 访问本地,可以看到请求被成功转发 1 curl localhost:10000 配置文件解析 listener : Envoy 的监</description>
    </item>
    <item>
      <title>使用grpc操作containerd</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8grpc%E6%93%8D%E4%BD%9Ccontainerd/</link>
      <pubDate>Thu, 16 Feb 2023 19:43:26 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8grpc%E6%93%8D%E4%BD%9Ccontainerd/</guid>
      <description>环境配置 下载containerd二进制包 1 2 wget https://github.com/containerd/containerd/releases/download/v1.6.18/containerd-1.6.18-linux-amd64.tar.gz # 解压包中的二进制到 /usr/local/bin/ 生成配置文件 1 2 mkdir -p /etc/containerd containerd config default &amp;gt; /etc/containerd/config.toml 修改 /etc/containerd/c</description>
    </item>
    <item>
      <title>添加公网ip到k8sapiserver</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E6%B7%BB%E5%8A%A0%E5%85%AC%E7%BD%91ip%E5%88%B0apiserver/</link>
      <pubDate>Thu, 16 Feb 2023 16:22:41 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E6%B7%BB%E5%8A%A0%E5%85%AC%E7%BD%91ip%E5%88%B0apiserver/</guid>
      <description>通常情况下，kubernetes 是内网环境，如果想通过公网ip访问, 或者主机增加了一个ip, 如何访问 测试 为 master 节点添加一个ip 1 ip addr add 192.168.50.75/24 dev enp1s0 将</description>
    </item>
    <item>
      <title>使用k8s进行leader选举</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8k8s%E8%BF%9B%E8%A1%8Cleader%E9%80%89%E4%B8%BE%E5%8E%9F%E7%90%86/</link>
      <pubDate>Thu, 16 Feb 2023 13:59:00 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8k8s%E8%BF%9B%E8%A1%8Cleader%E9%80%89%E4%B8%BE%E5%8E%9F%E7%90%86/</guid>
      <description>示例代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66</description>
    </item>
    <item>
      <title>csi挂载nfs</title>
      <link>http://inksnw.asuscomm.com:3001/post/csi%E6%8C%82%E8%BD%BDnfs/</link>
      <pubDate>Tue, 14 Feb 2023 19:11:47 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/csi%E6%8C%82%E8%BD%BDnfs/</guid>
      <description>配置NFS 安装nfs 1 2 3 4 5 6 7 8 9 10 ➜ apt install nfs-kernel-server # 查看导出的nfs ➜ cat /etc/exports # 重新导出 ➜ exportfs -a ➜ systemctl status nfs-server # 挂载配置情况 ➜ showmount -e localhost Export list for localhost: /data/public * 在另一台主</description>
    </item>
    <item>
      <title>临时容器调试</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%B8%B4%E6%97%B6%E5%AE%B9%E5%99%A8%E8%B0%83%E8%AF%95/</link>
      <pubDate>Fri, 10 Feb 2023 13:39:02 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%B8%B4%E6%97%B6%E5%AE%B9%E5%99%A8%E8%B0%83%E8%AF%95/</guid>
      <description>修改manifest文件 修改/etc/kubernetes/manifests 下的三个yaml配置文件在- --feature-gates项后</description>
    </item>
    <item>
      <title>访问pod的方式</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E8%AE%BF%E9%97%AEpod%E7%9A%84%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Thu, 09 Feb 2023 10:32:57 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E8%AE%BF%E9%97%AEpod%E7%9A%84%E6%96%B9%E5%BC%8F/</guid>
      <description>访问方式 直接访问pod ip 在pod中直接访问pod ip, 如 1 cur 10.233.96.61 访问ip+域名 1 curl 10-233-96-61.default.pod.cluster.local 使用完全限定名 创建一个pod,指定hostname和subdo</description>
    </item>
    <item>
      <title>K8s聚合api使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E8%81%9A%E5%90%88api%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 08 Feb 2023 14:21:20 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E8%81%9A%E5%90%88api%E4%BD%BF%E7%94%A8/</guid>
      <description>前置条件 需要/etc/kubernetes/manifests/kube-apiserver.yaml开启以下参数 1 2 3 4 - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt - --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key - --requestheader-allowed-names=front-proxy-client - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt 生</description>
    </item>
    <item>
      <title>Virtual Kubelet</title>
      <link>http://inksnw.asuscomm.com:3001/post/virtual-kubelet/</link>
      <pubDate>Tue, 29 Nov 2022 11:39:20 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/virtual-kubelet/</guid>
      <description>安装 containerd 1 apt install containerd 安装 crictl 1 2 3 4 VERSION=&amp;#34;v1.24.1&amp;#34; wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz sudo tar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/local/bin rm -f crictl-$VERSION-linux-amd64.tar.gz 设置crictl的配置文件 1 2 3 4 5 cat &amp;gt; /etc/crictl.yaml &amp;lt;&amp;lt;EOF runtime-endpoint: unix:///run/containerd/containerd.sock image-endpoint: unix:///run/containerd/containerd.sock timeout: 10 EOF 拉取镜像测试 1 2 3 4 5 6 ➜ crictl pull</description>
    </item>
    <item>
      <title>OCI规范-Image spec</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86-oci%E8%A7%84%E8%8C%83/</link>
      <pubDate>Mon, 28 Nov 2022 17:17:41 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86-oci%E8%A7%84%E8%8C%83/</guid>
      <description>OCI 规范说起 OCI（Open Container Initiative）规范是事实上的容器标准,OCI 规范分为 Image spec 和 Runtime spec 两部分，它们分别覆盖了容器生命周期的不同阶</description>
    </item>
    <item>
      <title>使用nsenter调试容器网络</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8nsenter%E8%B0%83%E8%AF%95%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Sun, 27 Nov 2022 15:15:23 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8nsenter%E8%B0%83%E8%AF%95%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C/</guid>
      <description>获取容器 ID 使用 kubectl 获取 pod 中任意 cotnainer 的 id: 1 kubectl -n test describe pod debug-685b48bcf5-ggn5d containerd运行时 1 2 3 Containers: debug: Container ID: containerd://529bbd5c935562a9ba66fc9b9ffa95d486c6324f26d8253d744ffe3dfd728289 dockerd运行时 1 2 3 Containers: debug: Container ID: docker://e64939086488a9302821566b0c1f193b755c805f5ff5370d5ce5e6f154ffc648 获取 PID 拿到 container id</description>
    </item>
    <item>
      <title>使用rust编写envoy扩展</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8rust%E7%BC%96%E5%86%99envoy%E6%89%A9%E5%B1%95/</link>
      <pubDate>Fri, 25 Nov 2022 10:11:19 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8rust%E7%BC%96%E5%86%99envoy%E6%89%A9%E5%B1%95/</guid>
      <description>最简单使用 先最简单的使用envoy 代理一个网站 下载envoy二进制 1 wget https://github.com/envoyproxy/envoy/releases/download/v1.24.0/envoy-1.24.0-linux-x86_64 设置一个配置文件,示例文件来自于 官方文档 1 2 3 4 5 6 7 8 9 10 11 12 13 14</description>
    </item>
    <item>
      <title>Docker&#43;flannel跨主机通信</title>
      <link>http://inksnw.asuscomm.com:3001/post/docker&#43;flannel%E8%B7%A8%E4%B8%BB%E6%9C%BA%E9%80%9A%E4%BF%A1/</link>
      <pubDate>Thu, 24 Nov 2022 19:43:57 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/docker&#43;flannel%E8%B7%A8%E4%B8%BB%E6%9C%BA%E9%80%9A%E4%BF%A1/</guid>
      <description>安装ETCD flannel需要把网络信息存储在etcd中,我们先安装etcd 1 apt install etcd 修改etcd配置文件,开启对外访问 1 2 3 4 5 6 7 8 9 10 #</description>
    </item>
    <item>
      <title>Rook安装与使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/rook%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 17 Nov 2022 11:05:33 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/rook%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid>
      <description>在k8s上安装rook 安装文档 https://rook.io/docs/rook/v1.10/Getting-Started/quickstart/ 1 2 3 4 git clone --single-branch --branch v1.10.5 https://github.com/rook/rook.git cd rook/deploy/examples kubectl create -f crds.yaml -f common.yaml -f operator.yaml kubectl create -f cluster.yaml 查看创建的Pod 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22</description>
    </item>
    <item>
      <title>使用goland远程开发</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8goland%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91/</link>
      <pubDate>Sun, 13 Nov 2022 23:36:36 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8goland%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91/</guid>
      <description>起因 发现了一个goland的bug, 当引入 _ &amp;quot;k8s.io/cli-runtime/pkg/resource&amp;quot; 这个库时,单步调试就百分百进入 proc.go 在windows和Linux下都是正常的,只有mac 不行,网上</description>
    </item>
    <item>
      <title>Etcd与confd简单使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/etcd%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 04 Nov 2022 15:12:02 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/etcd%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</guid>
      <description>etcd单机安装与使用 1 2 3 brew install etcd brew services list brew services start etcd 查看信息 1 2 3 ➜ etcdctl version etcdctl version: 3.5.5 API version: 3.5 创建资源操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # 创建 etcdctl put /user/101/foo1 a etcdctl</description>
    </item>
    <item>
      <title>使用Telepresence流量转发</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8telepresence%E6%B5%81%E9%87%8F%E8%BD%AC%E5%8F%91/</link>
      <pubDate>Thu, 03 Nov 2022 19:45:56 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8telepresence%E6%B5%81%E9%87%8F%E8%BD%AC%E5%8F%91/</guid>
      <description>简介 yaml工程师在开发时想从本机直连k8s集群的服务,或者将集群内的请求流量劫持到本机进行处理, 都很麻烦,Telepresence 这个工具</description>
    </item>
    <item>
      <title>Krustlet使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/krustlet%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 27 Oct 2022 00:41:02 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/krustlet%E4%BD%BF%E7%94%A8/</guid>
      <description>前置条件 准备一个k8s集群,版本1.24,本机操作在mac上,已经安装好kubelet并配置好~/.kube/config 1 2 curl -LO &amp;#34;https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl&amp;#34; curl</description>
    </item>
    <item>
      <title>Harbor安装与containerd</title>
      <link>http://inksnw.asuscomm.com:3001/post/harbor%E5%AE%89%E8%A3%85%E4%B8%8Econtainerd/</link>
      <pubDate>Fri, 30 Sep 2022 17:14:14 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/harbor%E5%AE%89%E8%A3%85%E4%B8%8Econtainerd/</guid>
      <description>harbor安装 下载离线安装包700M 1 2 3 4 wget https://mirrors.tuna.tsinghua.edu.cn/github-release/goharbor/harbor/v2.11.0/harbor-offline-installer-v2.11.0.tgz tar -zxvf harbor-offline-installer-v2.11.0.tgz cd harbor cp harbor.yml.tmpl harbor.yml 修改 harbor.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34</description>
    </item>
    <item>
      <title>Fluent Bit日志收集</title>
      <link>http://inksnw.asuscomm.com:3001/post/fluent-bit%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/</link>
      <pubDate>Wed, 28 Sep 2022 00:31:21 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/fluent-bit%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/</guid>
      <description>组件 fluent-bit 负责解析及数据过滤 fluentd 负责接收fluent-bit解析后的数据,发送到mq等 安装测试 文档: https://docs.fluentbit.io/manual/installation/getting-started-with-fluent-bit 1 2 helm repo add fluent https://fluent.github.io/helm-charts helm upgrade --install fluent-bit fluent/fluent-bit 默认安装的日志收集配</description>
    </item>
    <item>
      <title>使用github作为Helm的chart仓库</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8github%E4%BD%9C%E4%B8%BAhelm%E7%9A%84chart%E4%BB%93%E5%BA%93/</link>
      <pubDate>Tue, 27 Sep 2022 16:56:13 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E4%BD%BF%E7%94%A8github%E4%BD%9C%E4%B8%BAhelm%E7%9A%84chart%E4%BB%93%E5%BA%93/</guid>
      <description>创建一个github仓库 如果不想生成的tar包让代码目录变的混乱,可新建一个分支,专门存储chart文件 想自动化完成,可以了解基本原理后直接</description>
    </item>
    <item>
      <title>OpenTelemetry使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/opentelemetry%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 25 Sep 2022 17:47:24 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/opentelemetry%E4%BD%BF%E7%94%A8/</guid>
      <description>什么是OpenTelemetry OpenTelemetry:实现Metrics ,Tracing , Logging 的融合及大一统，作为APM的数据采集终极解决方案。 Tra</description>
    </item>
    <item>
      <title>Tekton和argocd使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/tekton%E5%92%8Cargocd%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 24 Sep 2022 20:05:03 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/tekton%E5%92%8Cargocd%E4%BD%BF%E7%94%A8/</guid>
      <description>Tekton是一个谷歌开源的kubernetes原生CI/CD框架 部分重要组件 Tekton Pipelines: 定义流水线（包含task、 task-run、pipelin</description>
    </item>
    <item>
      <title>Cert Manager使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/cert-manager%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 23 Sep 2022 14:11:28 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/cert-manager%E4%BD%BF%E7%94%A8/</guid>
      <description>cert-manager 工作原理 cert-manager 部署到 Kubernetes 集群后，它会 watch 它所支持的 CRD 资源，我们通过创建 CRD 资源来指示 cert-manager 为我们签发证书并自动续期: 几个关键的资源: Issuer/ClusterIssuer: 用于指示 cert-manager 用什么方</description>
    </item>
    <item>
      <title>CoreDNS使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/coredns%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 22 Sep 2022 15:56:54 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/coredns%E4%BD%BF%E7%94%A8/</guid>
      <description>普通使用 下载二进制文件 1 https://github.com/coredns/coredns/releases/tag/v1.10.0 创建配置文件 1 2 3 4 .:53 { forward . 114.114.114.114 log } 目录结构 1 2 3 4 5 . ├── Corefile └── coredns 0 directories, 2 files 启动 1 ./coredns dig命令 查询DNS包括NS</description>
    </item>
    <item>
      <title>同步上游代码</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E5%90%8C%E6%AD%A5%E4%B8%8A%E6%B8%B8%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Wed, 21 Sep 2022 15:01:41 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E5%90%8C%E6%AD%A5%E4%B8%8A%E6%B8%B8%E4%BB%A3%E7%A0%81/</guid>
      <description>参考自 https://www.xiadmin.com/39250 原仓库又称为上游仓库，当我们在 GitHub 或者码云上 fork 出一个仓库后, 原仓库可能会有各种提交以及修改 如果原仓库更新了,此时怎样才能保证我们 fork 出来</description>
    </item>
    <item>
      <title>写一个cni插件</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E5%86%99%E4%B8%80%E4%B8%AAcni%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Mon, 19 Sep 2022 09:53:04 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E5%86%99%E4%B8%80%E4%B8%AAcni%E6%8F%92%E4%BB%B6/</guid>
      <description>什么是CNI CNI是Kubernetes提供的网络接口。要使用CNI，需要在kubelet上加参数–network-plugin=cni，需</description>
    </item>
    <item>
      <title>Prometheus简单使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/prometheus/</link>
      <pubDate>Wed, 24 Aug 2022 15:11:03 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/prometheus/</guid>
      <description>安装prometheus operator 1 2 3 4 helm repo add prometheus-community https://prometheus-community.github.io/helm-charts helm repo update kubectl create ns monitor helm install myprometheus prometheus-community/kube-prometheus-stack -n monitor 报错解决 plugin type=&amp;ldquo;calico&amp;rdquo; failed (add): error getting ClusterInformation: connection is unauthorized: Unauthorized 删除 /etc/cni/net.d/下的文</description>
    </item>
    <item>
      <title>Istio与jaeger</title>
      <link>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8Ejaeger/</link>
      <pubDate>Wed, 17 Aug 2022 22:37:31 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8Ejaeger/</guid>
      <description>暴露出istio自带的jaeger 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 apiVersion: networking.istio.io/v1beta1 kind: Gateway metadata: name: tracing-gateway namespace: istio-system spec:</description>
    </item>
    <item>
      <title>Envoy转换grpc为http</title>
      <link>http://inksnw.asuscomm.com:3001/post/envoy%E8%BD%AC%E6%8D%A2grpc%E4%B8%BAhttp/</link>
      <pubDate>Wed, 17 Aug 2022 17:29:33 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/envoy%E8%BD%AC%E6%8D%A2grpc%E4%B8%BAhttp/</guid>
      <description>文档 https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/grpc_json_transcoder_filter 环境准备 Gateway 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 apiVersion: networking.istio.io/v1beta1 kind: Gateway metadata: name: grpc-gateway namespace: myistio spec: selector: istio: grpc-ingressgateway servers: - port: number: 80 name: grpc protocol: GRPC hosts: - &amp;#34;*&amp;#34; VirtualService 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 apiVersion: networking.istio.io/v1beta1 kind: VirtualService metadata:</description>
    </item>
    <item>
      <title>EnvoyFilter</title>
      <link>http://inksnw.asuscomm.com:3001/post/envoyfilter/</link>
      <pubDate>Wed, 17 Aug 2022 15:28:29 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/envoyfilter/</guid>
      <description>文档 https://istio.io/latest/docs/reference/config/networking/envoy-filter/#EnvoyFilter 使用EnvoyFilter修改某些字段的值，添加特定的过滤器，甚至添加全新的侦听器，群集等 1、网络过滤器（Network Filters</description>
    </item>
    <item>
      <title>istio与证书</title>
      <link>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8E%E8%AF%81%E4%B9%A6/</link>
      <pubDate>Tue, 16 Aug 2022 17:00:50 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8E%E8%AF%81%E4%B9%A6/</guid>
      <description>环境准备 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66</description>
    </item>
    <item>
      <title>Istio与grpc</title>
      <link>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8Egrpc/</link>
      <pubDate>Tue, 16 Aug 2022 15:38:47 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8Egrpc/</guid>
      <description>准备一套grpc示例代码,参考 istio配置 查看gateway配置文件 1 istioctl profile dump --config-path components demo 创建grpc专用gateway 1 2 3 4 5 6 7 8 9 10 11 12 13</description>
    </item>
    <item>
      <title>grpc示例</title>
      <link>http://inksnw.asuscomm.com:3001/post/grpc%E7%A4%BA%E4%BE%8B/</link>
      <pubDate>Mon, 15 Aug 2022 21:24:41 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/grpc%E7%A4%BA%E4%BE%8B/</guid>
      <description>准备工作 报错 1 2 ➜ protoc --go_out=. --go-grpc_out=. hello.proto protoc-gen-go: unable to determine Go import path for &amp;#34;hello.proto&amp;#34; 解决办法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 syntax = &amp;#34;proto3&amp;#34;; package services; //添加option信息 //option go_package = &amp;#34;path;name&amp;#34;; //path 表示生成的g</description>
    </item>
    <item>
      <title>istio授权策略</title>
      <link>http://inksnw.asuscomm.com:3001/post/istio%E6%8E%88%E6%9D%83%E7%AD%96%E7%95%A5/</link>
      <pubDate>Mon, 15 Aug 2022 10:27:37 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/istio%E6%8E%88%E6%9D%83%E7%AD%96%E7%95%A5/</guid>
      <description>Istio授权策略可对网格中的工作负载进行访问控制.类似spring security,casbin action ALLOW 或者DENY、AUDIT、CUSTOM 同时支持允许和拒绝策略。如同</description>
    </item>
    <item>
      <title>istio与jwt</title>
      <link>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8Ejwt/</link>
      <pubDate>Mon, 15 Aug 2022 10:27:37 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8Ejwt/</guid>
      <description>环境准备 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66</description>
    </item>
    <item>
      <title>nginx-ingress</title>
      <link>http://inksnw.asuscomm.com:3001/post/nginx-ingress/</link>
      <pubDate>Fri, 12 Aug 2022 10:27:37 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/nginx-ingress/</guid>
      <description>安装 ingress的本质就是一个南北向的网关,内置一个Nginx,控制器(Operator)监听ingress变化, reload nginx 配置 参考文档: https://kubernetes.github.io/ingress-nginx/deploy/ 1 ➜</description>
    </item>
    <item>
      <title>K8s权限</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E6%9D%83%E9%99%90/</link>
      <pubDate>Wed, 10 Aug 2022 00:27:31 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E6%9D%83%E9%99%90/</guid>
      <description>证书生成 生成证书文件 1 2 3 openssl genrsa -out client.key 2048 openssl req -new -key client.key -out client.csr -subj &amp;#34;/CN=user1&amp;#34; openssl x509 -req -in client.csr -CA /etc/kubernetes/pki/ca.crt -CAkey /etc/kubernetes/pki/ca.key -CAcreateserial -out client.crt -days 365 生成如下文件 1 2 3 4 . ├── client.crt ├── client.csr └── client.key 查看k8s的</description>
    </item>
    <item>
      <title>Kubebuilder笔记</title>
      <link>http://inksnw.asuscomm.com:3001/post/kubebuilder%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Tue, 09 Aug 2022 23:47:44 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/kubebuilder%E7%AC%94%E8%AE%B0/</guid>
      <description>记录一下方便自己使用 1 2 3 4 5 6 7 8 9 10 11 12 mkdir myoperator cd myoperator go mod init myoperator kubebuilder init --domain my.domain kubebuilder create api --group webapp --version v1 --kind Guestbook #Create Resource [y/n] #y #Create Controller [y/n] #y kubebuilder create webhook --group webapp --version v1 --kind Guestbook --defaulting --programmatic-validation make generate 一段代码笔记</description>
    </item>
    <item>
      <title>Mysql主从配置</title>
      <link>http://inksnw.asuscomm.com:3001/post/mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Tue, 09 Aug 2022 09:10:34 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/</guid>
      <description>安装三个数据库 1 2 3 4 5 6 7 for i in $(seq 1 3) do name=mysql&amp;#34;$i&amp;#34; port=330&amp;#34;$i&amp;#34; mkdir &amp;#34;$name&amp;#34; docker run -p &amp;#34;$port&amp;#34;:3306 --name &amp;#34;$name&amp;#34; -v /root/&amp;#34;$name&amp;#34;/conf:/etc/mysql/conf.d -v /root/&amp;#34;$name&amp;#34;/logs:/var/log/mysql -v /root/&amp;#34;$name&amp;#34;/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7 --character-set-server=utf8mb4 done 开启bin_log 1 2 3 4 5 6 [mysqld] # 数据同步时数据库唯一</description>
    </item>
    <item>
      <title>设计模式</title>
      <link>http://inksnw.asuscomm.com:3001/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 04 Jul 2022 11:46:35 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid>
      <description>核心内容来自于 https://lailin.xyz/post/go-design-pattern.html 手打了一遍文档并验证了实现,主要用于加强记忆 很多设计模式里的东西,在平时写代码无意识就用到了,设计模式有意义么,对于多人合作</description>
    </item>
    <item>
      <title>Istio简单使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/istio%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 30 Jun 2022 10:27:37 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/istio%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</guid>
      <description>安装 主程序 参考文档: https://istio.io/latest/zh/docs/setup/install/ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 ➜ brew install istioctl # 查看 istioctl 可安装的模式 ➜ istioctl profile list Istio configuration profiles: default demo empty minimal openshift preview remote ➜ istioctl install --set profile=demo # 查看安装了什么 ➜ kubectl</description>
    </item>
    <item>
      <title>OpenELB使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/openelb%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 22 Jun 2022 11:01:26 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/openelb%E4%BD%BF%E7%94%A8/</guid>
      <description>二层网络即流量都在一个二层网络中。此模式借助其他组件例如Kube-proxy，来实现负载均衡。OpenELB会把svc的ip配置在K8S集群</description>
    </item>
    <item>
      <title>Iptables与ipvs</title>
      <link>http://inksnw.asuscomm.com:3001/post/iptables%E4%B8%8Eipvs/</link>
      <pubDate>Wed, 25 May 2022 11:07:01 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/iptables%E4%B8%8Eipvs/</guid>
      <description>iptables filter表 1 2 3 iptables -F #清空（flush） iptables -X #删除指定表中用户自定义的规则链（delete-chain） iptables -nvL -t filter --line-number 1 2 3 4 5 6 #追加 iptables</description>
    </item>
    <item>
      <title>Vxlan使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/vxlan%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 25 May 2022 11:05:09 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/vxlan%E4%BD%BF%E7%94%A8/</guid>
      <description>vxlan VXLAN是Virtual eXtensible Local Area Network的缩写,是一个在传统Layer 3网络上架设出来的Layer 2 overlay网络 点对点模式 在逻</description>
    </item>
    <item>
      <title>Kubefed使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/kubefed%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 25 May 2022 11:01:26 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/kubefed%E4%BD%BF%E7%94%A8/</guid>
      <description>安装配置 1 helm --namespace kube-federation-system upgrade -i kubefed kubefed-charts/kubefed --version=0.9.1 --create-namespace 安装kubefedctl二进制 配置kube-config上下文: Mac 上可以使用一个叫 kubecontext的小工具</description>
    </item>
    <item>
      <title>K8s基础知识</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Wed, 25 May 2022 10:36:08 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description></description>
    </item>
    <item>
      <title>runc的使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/runc/</link>
      <pubDate>Tue, 24 May 2022 21:24:41 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/runc/</guid>
      <description>runc 是一个命令行客户端，用于运行根据 Open Container Initiative (OCI) 格式打包的应用程序 上图是k8s调用containerd到拉起pod进程的流程,拉起pod这个过程是</description>
    </item>
    <item>
      <title>Go语言一些知识</title>
      <link>http://inksnw.asuscomm.com:3001/post/go%E8%AF%AD%E8%A8%80%E4%B8%80%E4%BA%9B%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Sat, 02 Apr 2022 21:24:41 +0800</pubDate>
      <guid>http://inksnw.asuscomm.com:3001/post/go%E8%AF%AD%E8%A8%80%E4%B8%80%E4%BA%9B%E7%9F%A5%E8%AF%86/</guid>
      <description>常规 可变参数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 package main import &amp;#34;fmt&amp;#34; type User struct { Id int Name string } type UserAttrFunc func(user *User) type UserAttrFuncs []UserAttrFunc func (t UserAttrFuncs) apply(u</description>
    </item>
  </channel>
</rss>
