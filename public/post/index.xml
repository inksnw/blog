<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on </title>
    <link>http://inksnw.asuscomm.com:3001/post/</link>
    <description>Recent content in Posts on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 17 Aug 2022 17:29:33 +0800</lastBuildDate><atom:link href="http://inksnw.asuscomm.com:3001/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Envoy转换grpc为http</title>
      <link>http://inksnw.asuscomm.com:3001/post/envoy%E8%BD%AC%E6%8D%A2grpc%E4%B8%BAhttp/</link>
      <pubDate>Wed, 17 Aug 2022 17:29:33 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/envoy%E8%BD%AC%E6%8D%A2grpc%E4%B8%BAhttp/</guid>
      <description>wip</description>
    </item>
    
    <item>
      <title>EnvoyFilter</title>
      <link>http://inksnw.asuscomm.com:3001/post/envoyfilter/</link>
      <pubDate>Wed, 17 Aug 2022 15:28:29 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/envoyfilter/</guid>
      <description>文档 https://istio.io/latest/docs/reference/config/networking/envoy-filter/#EnvoyFilter 使用EnvoyFilter修改某些字段的值，添加特定的过滤器，甚至添加全新的侦听器，群集等 1、网络过滤器（Network Filters</description>
    </item>
    
    <item>
      <title>istio与证书</title>
      <link>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8E%E8%AF%81%E4%B9%A6/</link>
      <pubDate>Tue, 16 Aug 2022 17:00:50 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8E%E8%AF%81%E4%B9%A6/</guid>
      <description>环境准备 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66</description>
    </item>
    
    <item>
      <title>Istio与grpc</title>
      <link>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8Egrpc/</link>
      <pubDate>Tue, 16 Aug 2022 15:38:47 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8Egrpc/</guid>
      <description>准备一套grpc示例代码,参考 istio配置 查看gateway配置文件 1 istioctl profile dump --config-path components demo 创建grpc专用gateway 1 2 3 4 5 6 7 8 9 10 11 12 13</description>
    </item>
    
    <item>
      <title>grpc示例</title>
      <link>http://inksnw.asuscomm.com:3001/post/grpc%E7%A4%BA%E4%BE%8B/</link>
      <pubDate>Mon, 15 Aug 2022 21:24:41 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/grpc%E7%A4%BA%E4%BE%8B/</guid>
      <description>准备工作 报错 1 2 $ protoc --go_out=. --go-grpc_out=. hello.proto protoc-gen-go: unable to determine Go import path for &amp;#34;hello.proto&amp;#34; 解决办法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 syntax = &amp;#34;proto3&amp;#34;; package services; //添加option信息 //option go_package = &amp;#34;path;name&amp;#34;; //path 表示生成的g</description>
    </item>
    
    <item>
      <title>istio授权策略</title>
      <link>http://inksnw.asuscomm.com:3001/post/istio%E6%8E%88%E6%9D%83%E7%AD%96%E7%95%A5/</link>
      <pubDate>Mon, 15 Aug 2022 10:27:37 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/istio%E6%8E%88%E6%9D%83%E7%AD%96%E7%95%A5/</guid>
      <description>Istio授权策略可对网格中的工作负载进行访问控制.类似spring security,casbin action ALLOW 或者DENY、AUDIT、CUSTOM 同时支持允许和拒绝策略。如同</description>
    </item>
    
    <item>
      <title>istio与jwt</title>
      <link>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8Ejwt/</link>
      <pubDate>Mon, 15 Aug 2022 10:27:37 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/istio%E4%B8%8Ejwt/</guid>
      <description>环境准备 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66</description>
    </item>
    
    <item>
      <title>nginx-ingress</title>
      <link>http://inksnw.asuscomm.com:3001/post/nginx-ingress/</link>
      <pubDate>Fri, 12 Aug 2022 10:27:37 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/nginx-ingress/</guid>
      <description>nginx-ingress 安装nginx-ingress 参考文档: https://kubernetes.github.io/ingress-nginx/deploy/ 1 ➜ kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.3.0/deploy/static/provider/cloud/deploy.yaml 修改服务模式为NodePort 1 ➜ kubectl edit svc ingress-nginx-controller -n ingress-nginx</description>
    </item>
    
    <item>
      <title>K8s权限</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E6%9D%83%E9%99%90/</link>
      <pubDate>Wed, 10 Aug 2022 00:27:31 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E6%9D%83%E9%99%90/</guid>
      <description>证书生成 生成证书文件 1 2 3 openssl genrsa -out client.key 2048 openssl req -new -key client.key -out client.csr -subj &amp;#34;/CN=user1&amp;#34; openssl x509 -req -in client.csr -CA /etc/kubernetes/pki/ca.crt -CAkey /etc/kubernetes/pki/ca.key -CAcreateserial -out client.crt -days 365 生成如下文件 1 2 3 4 . ├── client.crt ├── client.csr └── client.key 查看k8s的</description>
    </item>
    
    <item>
      <title>Kubebuilder笔记</title>
      <link>http://inksnw.asuscomm.com:3001/post/kubebuilder%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Tue, 09 Aug 2022 23:47:44 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/kubebuilder%E7%AC%94%E8%AE%B0/</guid>
      <description>记录一下方便自己使用 1 2 3 4 5 6 7 8 9 10 mkdir myoperator cd myoperator go mod init myoperator kubebuilder init --domain my.domain kubebuilder create api --group webapp --version v1 --kind Guestbook #Create Resource [y/n] #y #Create Controller [y/n] #y make generate</description>
    </item>
    
    <item>
      <title>Mysql主从配置</title>
      <link>http://inksnw.asuscomm.com:3001/post/mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Tue, 09 Aug 2022 09:10:34 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/</guid>
      <description>安装三个数据库 1 2 3 4 5 6 7 for i in $(seq 1 3) do name=mysql&amp;#34;$i&amp;#34; port=330&amp;#34;$i&amp;#34; mkdir &amp;#34;$name&amp;#34; docker run -p &amp;#34;$port&amp;#34;:3306 --name &amp;#34;$name&amp;#34; -v /root/&amp;#34;$name&amp;#34;/conf:/etc/mysql/conf.d -v /root/&amp;#34;$name&amp;#34;/logs:/var/log/mysql -v /root/&amp;#34;$name&amp;#34;/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7 --character-set-server=utf8mb4 done 开启bin_log 1 2 3 4 5 6 [mysqld] # 数据同步时数据库唯一</description>
    </item>
    
    <item>
      <title>设计模式</title>
      <link>http://inksnw.asuscomm.com:3001/post/design/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 04 Jul 2022 11:46:35 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/design/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid>
      <description>核心内容来自于 https://lailin.xyz/post/go-design-pattern.html 手打了一遍文档并验证了实现,主要用于加强记忆 很多设计模式里的东西,在平时写代码无意识就用到了,设计模式有意义么,对于多人合作</description>
    </item>
    
    <item>
      <title>Istio简单使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/istio%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 30 Jun 2022 10:27:37 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/istio%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</guid>
      <description>安装 主程序 参考文档: https://istio.io/latest/zh/docs/setup/install/ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 ➜ brew install istioctl # 查看 istioctl 可安装的模式 ➜ istioctl profile list Istio configuration profiles: default demo empty minimal openshift preview remote ➜ istioctl install --set profile=demo # 查看安装了什么 ➜ kubectl</description>
    </item>
    
    <item>
      <title>OpenELB使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/openelb%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 22 Jun 2022 11:01:26 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/openelb%E4%BD%BF%E7%94%A8/</guid>
      <description>二层网络即流量都在一个二层网络中。此模式借助其他组件例如Kube-proxy，来实现负载均衡。OpenELB会把svc的ip配置在K8S集群</description>
    </item>
    
    <item>
      <title>Iptables与ipvs</title>
      <link>http://inksnw.asuscomm.com:3001/post/iptables%E4%B8%8Eipvs/</link>
      <pubDate>Wed, 25 May 2022 11:07:01 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/iptables%E4%B8%8Eipvs/</guid>
      <description>filter表 1 2 3 iptables -F #清空（flush） iptables -X #删除指定表中用户自定义的规则链（delete-chain） iptables -nvL -t filter --line-number 1 2 3 4 5 6 #追加 iptables -A</description>
    </item>
    
    <item>
      <title>Vxlan使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/vxlan%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 25 May 2022 11:05:09 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/vxlan%E4%BD%BF%E7%94%A8/</guid>
      <description>vxlan 1 2 3 4 docker run --name ngx1 -p 8080:80 --privileged -d nginx docker exec -it ngx1 sh -c &amp;#34;echo ngx1 &amp;gt;/usr/share/nginx/html/index.html&amp;#34; docker run --name ngx1 -p 8080:80 --privileged -d nginx docker exec -it ngx1 sh -c &amp;#34;echo ngx2 &amp;gt;/usr/share/nginx/html/index.html&amp;#34; 点对点模式 1 2 3 4 5 # 在A机器上 ip link add vxlan0 type vxlan id 120 dstport 4789 remote 192.168.50.41 local</description>
    </item>
    
    <item>
      <title>Kubefed使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/kubefed%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 25 May 2022 11:01:26 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/kubefed%E4%BD%BF%E7%94%A8/</guid>
      <description>安装配置 1 helm --namespace kube-federation-system upgrade -i kubefed kubefed-charts/kubefed --version=0.9.1 --create-namespace 安装kubefedctl二进制 配置config上下文:略 1 2 kubefedctl join k1 --cluster-context k1-admin --host-cluster-context k1-admin --v=2 kubefedctl join k2 --cluster-context k2-admin --host-cluster-context k1-admin --v=2 1 kubectl -n kube-federation-system get kubefedclusters 1 kubectl create ns</description>
    </item>
    
    <item>
      <title>K8s基础知识</title>
      <link>http://inksnw.asuscomm.com:3001/post/k8s%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Wed, 25 May 2022 10:36:08 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/k8s%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description></description>
    </item>
    
    <item>
      <title>runc的使用</title>
      <link>http://inksnw.asuscomm.com:3001/post/runc/</link>
      <pubDate>Tue, 24 May 2022 21:24:41 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/runc/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Go语言一些知识</title>
      <link>http://inksnw.asuscomm.com:3001/post/go%E8%AF%AD%E8%A8%80%E4%B8%80%E4%BA%9B%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Sat, 02 Apr 2022 21:24:41 +0800</pubDate>
      
      <guid>http://inksnw.asuscomm.com:3001/post/go%E8%AF%AD%E8%A8%80%E4%B8%80%E4%BA%9B%E7%9F%A5%E8%AF%86/</guid>
      <description>常规 可变参数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 package main import &amp;#34;fmt&amp;#34; type User struct { Id int Name string } type UserAttrFunc func(user *User) type UserAttrFuncs []UserAttrFunc func (t UserAttrFuncs) apply(u</description>
    </item>
    
  </channel>
</rss>
